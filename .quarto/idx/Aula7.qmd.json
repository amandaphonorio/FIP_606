{"title":"Aula 7","markdown":{"yaml":{"title":"Aula 7","format":"html","editor":"visual"},"headingText":"Importanto os dados","containsRefs":false,"markdown":"\n\n\nCarregamos os pacotes `tidyverse` (para manipulação e visualização de dados) e `gsheet` (para ler dados do Google Sheets). Em seguida, a função `gsheet2tbl` foi é utilizada para ler os dados do Google Drive, armazenando-os no data frame soja. Por fim, a função `mutate` do pacote `dplyr` (parte do tidyverse) foi usada para converter as colunas TRAT e BLOCO em fatores, garantindo que esses dados sejam tratados como variáveis categóricas no data frame.\n\n```{r}\nlibrary(tidyverse)\nlibrary(gsheet)\n\nsoja <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=866852711\")\n\nsoja <- soja |>\n  mutate(TRAT = as.factor(TRAT),\n         BLOCO = as.factor(BLOCO))\n```\n\n### Visualização dos dados\n\nCarregamos as bibliotecas `ggplot2` (para criação de gráficos) e `Hmisc` (para funções estatísticas). Em seguida, os dados do data frame `soja` foram utilizados para criar um gráfico utilizando a função `ggplot`. Os dados são mapeados de forma que a variável `TRAT` é representada no eixo x e a variável `DFC` no eixo y. A função `geom_jitter` adiciona um gráfico de dispersão com um pequeno desvio horizontal (`width = 0.05`) para evitar sobreposição de pontos, usando a cor cinza (\"gray\"). A função `stat_summary` adiciona um resumo estatístico, onde `fun.data = \"mean_cl_boot\"` calcula a média e o intervalo de confiança utilizando o método bootstrap, e os resultados são exibidos em vermelho (\"red\") com uma espessura de linha de 0.5 e uma opacidade de 0.5. Finalmente, o objeto `dfc` armazena o gráfico resultante.\n\n```{r}\nlibrary(ggplot2)\nlibrary(Hmisc)\n\ndfc <-soja |>\n  ggplot(aes(TRAT, DFC))+\n  geom_jitter(width = 0.05, color = \n                \"gray\")+\n  stat_summary(fun.data = \n                 \"mean_cl_boot\", size = 0.5, color = \n                 \"red\", alpha = 0.5)\ndfc\n```\n\nForam realizados as mesmas etapas igual ao item anterior\n\n```{r}\nfer <-soja |>\n  ggplot(aes(TRAT, FER))+\n  geom_jitter(width = 0.05, color = \n                \"gray\")+\n  stat_summary(fun.data = \n                 \"mean_cl_boot\", size = 0.5, color = \n                 \"red\", alpha = 0.5)\nfer\n```\n\nForam realizados as mesmas etapas igual aos itens anteriores\n\n```{r}\nprod <-soja |>\n  ggplot(aes(TRAT, PROD))+\n  geom_jitter(width = 0.05, color = \n                \"gray\")+\n  stat_summary(fun.data = \n                 \"mean_cl_boot\", size = 0.5, color = \n                 \"red\", alpha = 0.5)\nprod\n```\n\nCarregamos o pacote `patchwork` a para facilitar a combinação de múltiplos gráficos em uma única visualização. Em seguida, o código combina os gráficos dfc, prod, e fer lado a lado em uma única visualização utilizando a sintaxe dfc \\| prod \\| fer. A barra vertical (\\|) é usada para colocar os gráficos lado a lado.\n\n```{r}\nlibrary(patchwork)\n\n(dfc|prod|fer)\n```\n\n# Anova\n\nPrimeiramente, criamos um modelo linear aov_dfc para a variável DFC em função de TRAT e BLOCO utilizando a função lm. Em seguida, a análise de variância (ANOVA) é realizada com a função anova. Carregamos o pacote `performance` para verificar a heterocedasticidade e a normalidade dos resíduos do modelo aov_dfc utilizando as funções `check_heteroscedasticity` e `check_normality`. A biblioteca `emmeans` é utilizada para calcular as médias marginais ajustadas dos níveis de TRAT, armazenadas em medias_dfc. A função `pwpm` exibe a matriz de comparações múltiplas entre as médias. A biblioteca multcomp é usada para gerar letras indicadoras de agrupamento homogêneo com a função `cld`. As mesmas etapas foram realizadas para as variáveis fer e prod.\n\n```{r}\naov_dfc <- lm (DFC ~ TRAT + BLOCO,\n               data = soja)\nanova(aov_dfc)\nlibrary(performance)\ncheck_heteroscedasticity(aov_dfc)\ncheck_normality(aov_dfc)\nlibrary(emmeans)\nmedias_dfc <- emmeans(aov_dfc, ~ TRAT)\nmedias_dfc\npwpm(medias_dfc)\nlibrary(multcomp)\ncld(medias_dfc, Letters = LETTERS)\n\naov_fer <- lm ( log (FER) ~ TRAT + BLOCO,\n               data = soja) ##Estou transformando aqui\nanova(aov_fer)\nlibrary(performance)\ncheck_heteroscedasticity(aov_fer)\ncheck_normality(aov_fer)\nlibrary(emmeans)\nmedias_fer <- emmeans(aov_fer, ~ TRAT, type = \"response\") ##como transformei, acrescento essa função para ele pegar as médias verdadeiras\nmedias_fer\npwpm(medias_fer)\nlibrary(multcomp)\ncld(medias_fer, Letters = LETTERS)\n\n\naov_prod <- lm (PROD ~ TRAT + BLOCO,\n               data = soja)\nanova(aov_prod)\nlibrary(performance)\ncheck_heteroscedasticity(aov_prod)\ncheck_normality(aov_prod)\nlibrary(emmeans)\nmedias_prod <- emmeans(aov_prod, ~ TRAT)\nmedias_prod\npwpm(medias_prod)\nlibrary(multcomp)\nmedias_prod_group <- cld(medias_prod, Letters = LETTERS)\n```\nComo a variável fer, as variâncias não eram homogêneas foi feita a transformação por Box Cox\n```{r}\nb <- boxcox(lm(soja$FER ~1))\nlambda <- b$x[which.max(b$y)]\nlambda \n\nsoja$FER2 <- (soja$FER ^ lambda - 1)/ lambda\nsoja$FER2\n\naov_fer<-lm(log(FER2)~ TRAT + BLOCO,\n             data=soja)\nanova(aov_fer)\n```\n\nPrimeiramente, foi um data frame df_prod a partir dos resultados de médias marginais agrupadas medias_prod_group. Em seguida, foi utilizada a função ggplot para criar um gráfico de pontos com a variável TRAT no eixo x e emmean no eixo y, e os limites do eixo y são definidos entre 2000 e 7000. Adicionou-se  uma barra de erro com  `geom_errorbar `, onde os limites mínimo (lower.CL) e máximo (upper.CL) são especificados. O gráfico é anotado com a letra \"A\" em uma posição específica utilizando a função  `annotate `. A função  `knitr::kable ` foi utilizada para criar uma tabela formatada com as colunas TRAT, emmean e .group do data frame df_prod, adequada para inclusão em um artigo. A biblioteca  `writexl ` foi carregada para gerar um arquivo Excel a partir do data frame df_prod, que é salvo como \"df_prod.xlsx\".\n\n```{r}\ndf_prod <- data.frame(medias_prod_group)\ndf_prod |>\n  ggplot(aes(TRAT, emmean))+\n  geom_point()+\n  ylim(2000,7000)+\n  geom_errorbar(aes(min = lower.CL,\n                    max = upper.CL),\n                width = 0.1)+\nannotate( geom = \"text\", x = 1.1, y = 4200,\n          label = \"A\") #exemplo de como coloca letra no gráfico\n\nknitr::kable(df_prod |>  dplyr ::select (TRAT, emmean, .group)) ##Fazer a tabela do artigo, já sai todas as informações\nlibrary(writexl) #Gera sua tabela no excel pronta\nwrite_xlsx(df_prod, \"df_prod.xlsx\")\n```\n\n","srcMarkdownNoYaml":"\n\n# Importanto os dados\n\nCarregamos os pacotes `tidyverse` (para manipulação e visualização de dados) e `gsheet` (para ler dados do Google Sheets). Em seguida, a função `gsheet2tbl` foi é utilizada para ler os dados do Google Drive, armazenando-os no data frame soja. Por fim, a função `mutate` do pacote `dplyr` (parte do tidyverse) foi usada para converter as colunas TRAT e BLOCO em fatores, garantindo que esses dados sejam tratados como variáveis categóricas no data frame.\n\n```{r}\nlibrary(tidyverse)\nlibrary(gsheet)\n\nsoja <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=866852711\")\n\nsoja <- soja |>\n  mutate(TRAT = as.factor(TRAT),\n         BLOCO = as.factor(BLOCO))\n```\n\n### Visualização dos dados\n\nCarregamos as bibliotecas `ggplot2` (para criação de gráficos) e `Hmisc` (para funções estatísticas). Em seguida, os dados do data frame `soja` foram utilizados para criar um gráfico utilizando a função `ggplot`. Os dados são mapeados de forma que a variável `TRAT` é representada no eixo x e a variável `DFC` no eixo y. A função `geom_jitter` adiciona um gráfico de dispersão com um pequeno desvio horizontal (`width = 0.05`) para evitar sobreposição de pontos, usando a cor cinza (\"gray\"). A função `stat_summary` adiciona um resumo estatístico, onde `fun.data = \"mean_cl_boot\"` calcula a média e o intervalo de confiança utilizando o método bootstrap, e os resultados são exibidos em vermelho (\"red\") com uma espessura de linha de 0.5 e uma opacidade de 0.5. Finalmente, o objeto `dfc` armazena o gráfico resultante.\n\n```{r}\nlibrary(ggplot2)\nlibrary(Hmisc)\n\ndfc <-soja |>\n  ggplot(aes(TRAT, DFC))+\n  geom_jitter(width = 0.05, color = \n                \"gray\")+\n  stat_summary(fun.data = \n                 \"mean_cl_boot\", size = 0.5, color = \n                 \"red\", alpha = 0.5)\ndfc\n```\n\nForam realizados as mesmas etapas igual ao item anterior\n\n```{r}\nfer <-soja |>\n  ggplot(aes(TRAT, FER))+\n  geom_jitter(width = 0.05, color = \n                \"gray\")+\n  stat_summary(fun.data = \n                 \"mean_cl_boot\", size = 0.5, color = \n                 \"red\", alpha = 0.5)\nfer\n```\n\nForam realizados as mesmas etapas igual aos itens anteriores\n\n```{r}\nprod <-soja |>\n  ggplot(aes(TRAT, PROD))+\n  geom_jitter(width = 0.05, color = \n                \"gray\")+\n  stat_summary(fun.data = \n                 \"mean_cl_boot\", size = 0.5, color = \n                 \"red\", alpha = 0.5)\nprod\n```\n\nCarregamos o pacote `patchwork` a para facilitar a combinação de múltiplos gráficos em uma única visualização. Em seguida, o código combina os gráficos dfc, prod, e fer lado a lado em uma única visualização utilizando a sintaxe dfc \\| prod \\| fer. A barra vertical (\\|) é usada para colocar os gráficos lado a lado.\n\n```{r}\nlibrary(patchwork)\n\n(dfc|prod|fer)\n```\n\n# Anova\n\nPrimeiramente, criamos um modelo linear aov_dfc para a variável DFC em função de TRAT e BLOCO utilizando a função lm. Em seguida, a análise de variância (ANOVA) é realizada com a função anova. Carregamos o pacote `performance` para verificar a heterocedasticidade e a normalidade dos resíduos do modelo aov_dfc utilizando as funções `check_heteroscedasticity` e `check_normality`. A biblioteca `emmeans` é utilizada para calcular as médias marginais ajustadas dos níveis de TRAT, armazenadas em medias_dfc. A função `pwpm` exibe a matriz de comparações múltiplas entre as médias. A biblioteca multcomp é usada para gerar letras indicadoras de agrupamento homogêneo com a função `cld`. As mesmas etapas foram realizadas para as variáveis fer e prod.\n\n```{r}\naov_dfc <- lm (DFC ~ TRAT + BLOCO,\n               data = soja)\nanova(aov_dfc)\nlibrary(performance)\ncheck_heteroscedasticity(aov_dfc)\ncheck_normality(aov_dfc)\nlibrary(emmeans)\nmedias_dfc <- emmeans(aov_dfc, ~ TRAT)\nmedias_dfc\npwpm(medias_dfc)\nlibrary(multcomp)\ncld(medias_dfc, Letters = LETTERS)\n\naov_fer <- lm ( log (FER) ~ TRAT + BLOCO,\n               data = soja) ##Estou transformando aqui\nanova(aov_fer)\nlibrary(performance)\ncheck_heteroscedasticity(aov_fer)\ncheck_normality(aov_fer)\nlibrary(emmeans)\nmedias_fer <- emmeans(aov_fer, ~ TRAT, type = \"response\") ##como transformei, acrescento essa função para ele pegar as médias verdadeiras\nmedias_fer\npwpm(medias_fer)\nlibrary(multcomp)\ncld(medias_fer, Letters = LETTERS)\n\n\naov_prod <- lm (PROD ~ TRAT + BLOCO,\n               data = soja)\nanova(aov_prod)\nlibrary(performance)\ncheck_heteroscedasticity(aov_prod)\ncheck_normality(aov_prod)\nlibrary(emmeans)\nmedias_prod <- emmeans(aov_prod, ~ TRAT)\nmedias_prod\npwpm(medias_prod)\nlibrary(multcomp)\nmedias_prod_group <- cld(medias_prod, Letters = LETTERS)\n```\nComo a variável fer, as variâncias não eram homogêneas foi feita a transformação por Box Cox\n```{r}\nb <- boxcox(lm(soja$FER ~1))\nlambda <- b$x[which.max(b$y)]\nlambda \n\nsoja$FER2 <- (soja$FER ^ lambda - 1)/ lambda\nsoja$FER2\n\naov_fer<-lm(log(FER2)~ TRAT + BLOCO,\n             data=soja)\nanova(aov_fer)\n```\n\nPrimeiramente, foi um data frame df_prod a partir dos resultados de médias marginais agrupadas medias_prod_group. Em seguida, foi utilizada a função ggplot para criar um gráfico de pontos com a variável TRAT no eixo x e emmean no eixo y, e os limites do eixo y são definidos entre 2000 e 7000. Adicionou-se  uma barra de erro com  `geom_errorbar `, onde os limites mínimo (lower.CL) e máximo (upper.CL) são especificados. O gráfico é anotado com a letra \"A\" em uma posição específica utilizando a função  `annotate `. A função  `knitr::kable ` foi utilizada para criar uma tabela formatada com as colunas TRAT, emmean e .group do data frame df_prod, adequada para inclusão em um artigo. A biblioteca  `writexl ` foi carregada para gerar um arquivo Excel a partir do data frame df_prod, que é salvo como \"df_prod.xlsx\".\n\n```{r}\ndf_prod <- data.frame(medias_prod_group)\ndf_prod |>\n  ggplot(aes(TRAT, emmean))+\n  geom_point()+\n  ylim(2000,7000)+\n  geom_errorbar(aes(min = lower.CL,\n                    max = upper.CL),\n                width = 0.1)+\nannotate( geom = \"text\", x = 1.1, y = 4200,\n          label = \"A\") #exemplo de como coloca letra no gráfico\n\nknitr::kable(df_prod |>  dplyr ::select (TRAT, emmean, .group)) ##Fazer a tabela do artigo, já sai todas as informações\nlibrary(writexl) #Gera sua tabela no excel pronta\nwrite_xlsx(df_prod, \"df_prod.xlsx\")\n```\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"Aula7.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.450","editor":"visual","theme":"cosmo","title":"Aula 7"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}