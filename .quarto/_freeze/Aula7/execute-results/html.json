{
  "hash": "6f5d34f8608335670e1882ecc43cfcab",
  "result": {
    "markdown": "---\ntitle: \"Aula 7\"\nformat: html\neditor: visual\n---\n\n\n# Importanto os dados\n\nCarregamos os pacotes `tidyverse` (para manipulação e visualização de dados) e `gsheet` (para ler dados do Google Sheets). Em seguida, a função `gsheet2tbl` foi é utilizada para ler os dados do Google Drive, armazenando-os no data frame soja. Por fim, a função `mutate` do pacote `dplyr` (parte do tidyverse) foi usada para converter as colunas TRAT e BLOCO em fatores, garantindo que esses dados sejam tratados como variáveis categóricas no data frame.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(gsheet)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'gsheet' was built under R version 4.3.3\n```\n:::\n\n```{.r .cell-code}\nsoja <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=866852711\")\n\nsoja <- soja |>\n  mutate(TRAT = as.factor(TRAT),\n         BLOCO = as.factor(BLOCO))\n```\n:::\n\n\n### Visualização dos dados\n\nCarregamos as bibliotecas `ggplot2` (para criação de gráficos) e `Hmisc` (para funções estatísticas). Em seguida, os dados do data frame `soja` foram utilizados para criar um gráfico utilizando a função `ggplot`. Os dados são mapeados de forma que a variável `TRAT` é representada no eixo x e a variável `DFC` no eixo y. A função `geom_jitter` adiciona um gráfico de dispersão com um pequeno desvio horizontal (`width = 0.05`) para evitar sobreposição de pontos, usando a cor cinza (\"gray\"). A função `stat_summary` adiciona um resumo estatístico, onde `fun.data = \"mean_cl_boot\"` calcula a média e o intervalo de confiança utilizando o método bootstrap, e os resultados são exibidos em vermelho (\"red\") com uma espessura de linha de 0.5 e uma opacidade de 0.5. Finalmente, o objeto `dfc` armazena o gráfico resultante.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(Hmisc)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'Hmisc' was built under R version 4.3.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'Hmisc'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:dplyr':\n\n    src, summarize\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    format.pval, units\n```\n:::\n\n```{.r .cell-code}\ndfc <-soja |>\n  ggplot(aes(TRAT, DFC))+\n  geom_jitter(width = 0.05, color = \n                \"gray\")+\n  stat_summary(fun.data = \n                 \"mean_cl_boot\", size = 0.5, color = \n                 \"red\", alpha = 0.5)\ndfc\n```\n\n::: {.cell-output-display}\n![](Aula7_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\nForam realizados as mesmas etapas igual ao item anterior\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfer <-soja |>\n  ggplot(aes(TRAT, FER))+\n  geom_jitter(width = 0.05, color = \n                \"gray\")+\n  stat_summary(fun.data = \n                 \"mean_cl_boot\", size = 0.5, color = \n                 \"red\", alpha = 0.5)\nfer\n```\n\n::: {.cell-output-display}\n![](Aula7_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nForam realizados as mesmas etapas igual aos itens anteriores\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprod <-soja |>\n  ggplot(aes(TRAT, PROD))+\n  geom_jitter(width = 0.05, color = \n                \"gray\")+\n  stat_summary(fun.data = \n                 \"mean_cl_boot\", size = 0.5, color = \n                 \"red\", alpha = 0.5)\nprod\n```\n\n::: {.cell-output-display}\n![](Aula7_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nCarregamos o pacote `patchwork` a para facilitar a combinação de múltiplos gráficos em uma única visualização. Em seguida, o código combina os gráficos dfc, prod, e fer lado a lado em uma única visualização utilizando a sintaxe dfc \\| prod \\| fer. A barra vertical (\\|) é usada para colocar os gráficos lado a lado.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(patchwork)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'patchwork' was built under R version 4.3.3\n```\n:::\n\n```{.r .cell-code}\n(dfc|prod|fer)\n```\n\n::: {.cell-output-display}\n![](Aula7_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n# Anova\n\nPrimeiramente, criamos um modelo linear aov_dfc para a variável DFC em função de TRAT e BLOCO utilizando a função lm. Em seguida, a análise de variância (ANOVA) é realizada com a função anova. Carregamos o pacote `performance` para verificar a heterocedasticidade e a normalidade dos resíduos do modelo aov_dfc utilizando as funções `check_heteroscedasticity` e `check_normality`. A biblioteca `emmeans` é utilizada para calcular as médias marginais ajustadas dos níveis de TRAT, armazenadas em medias_dfc. A função `pwpm` exibe a matriz de comparações múltiplas entre as médias. A biblioteca multcomp é usada para gerar letras indicadoras de agrupamento homogêneo com a função `cld`. As mesmas etapas foram realizadas para as variáveis fer e prod.\n\n\n::: {.cell}\n\n```{.r .cell-code}\naov_dfc <- lm (DFC ~ TRAT + BLOCO,\n               data = soja)\nanova(aov_dfc)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAnalysis of Variance Table\n\nResponse: DFC\n          Df  Sum Sq Mean Sq F value    Pr(>F)    \nTRAT       7 149.299 21.3284 51.5490 8.218e-12 ***\nBLOCO      3   0.461  0.1537  0.3716    0.7743    \nResiduals 21   8.689  0.4138                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n\n```{.r .cell-code}\nlibrary(performance)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'performance' was built under R version 4.3.3\n```\n:::\n\n```{.r .cell-code}\ncheck_heteroscedasticity(aov_dfc)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOK: Error variance appears to be homoscedastic (p = 0.532).\n```\n:::\n\n```{.r .cell-code}\ncheck_normality(aov_dfc)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOK: residuals appear as normally distributed (p = 0.978).\n```\n:::\n\n```{.r .cell-code}\nlibrary(emmeans)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'emmeans' was built under R version 4.3.3\n```\n:::\n\n```{.r .cell-code}\nmedias_dfc <- emmeans(aov_dfc, ~ TRAT)\nmedias_dfc\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n TRAT emmean    SE df lower.CL upper.CL\n 1     10.88 0.322 21    10.21    11.54\n 2      6.42 0.322 21     5.76     7.09\n 3      6.05 0.322 21     5.38     6.72\n 4      4.75 0.322 21     4.08     5.42\n 5      4.20 0.322 21     3.53     4.87\n 6      4.00 0.322 21     3.33     4.67\n 7      4.08 0.322 21     3.41     4.74\n 8      4.58 0.322 21     3.91     5.24\n\nResults are averaged over the levels of: BLOCO \nConfidence level used: 0.95 \n```\n:::\n\n```{.r .cell-code}\npwpm(medias_dfc)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        1       2       3       4       5       6       7       8\n1 [10.87]  <.0001  <.0001  <.0001  <.0001  <.0001  <.0001  <.0001\n2   4.450 [ 6.42]  0.9896  0.0249  0.0017  0.0006  0.0009  0.0107\n3   4.825   0.375 [ 6.05]  0.1329  0.0107  0.0040  0.0058  0.0628\n4   6.125   1.675   1.300 [ 4.75]  0.9202  0.7173  0.8072  0.9999\n5   6.675   2.225   1.850   0.550 [ 4.20]  0.9998  1.0000  0.9896\n6   6.875   2.425   2.050   0.750   0.200 [ 4.00]  1.0000  0.9020\n7   6.800   2.350   1.975   0.675   0.125  -0.075 [ 4.07]  0.9499\n8   6.300   1.850   1.475   0.175  -0.375  -0.575  -0.500 [ 4.57]\n\nRow and column labels: TRAT\nUpper triangle: P values   adjust = \"tukey\"\nDiagonal: [Estimates] (emmean) \nLower triangle: Comparisons (estimate)   earlier vs. later\n```\n:::\n\n```{.r .cell-code}\nlibrary(multcomp)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'multcomp' was built under R version 4.3.3\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nCarregando pacotes exigidos: mvtnorm\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nCarregando pacotes exigidos: survival\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nCarregando pacotes exigidos: TH.data\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nCarregando pacotes exigidos: MASS\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'MASS'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:patchwork':\n\n    area\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:dplyr':\n\n    select\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'TH.data'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:MASS':\n\n    geyser\n```\n:::\n\n```{.r .cell-code}\ncld(medias_dfc, Letters = LETTERS)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n TRAT emmean    SE df lower.CL upper.CL .group\n 6      4.00 0.322 21     3.33     4.67  A    \n 7      4.08 0.322 21     3.41     4.74  A    \n 5      4.20 0.322 21     3.53     4.87  A    \n 8      4.58 0.322 21     3.91     5.24  AB   \n 4      4.75 0.322 21     4.08     5.42  AB   \n 3      6.05 0.322 21     5.38     6.72   BC  \n 2      6.42 0.322 21     5.76     7.09    C  \n 1     10.88 0.322 21    10.21    11.54     D \n\nResults are averaged over the levels of: BLOCO \nConfidence level used: 0.95 \nP value adjustment: tukey method for comparing a family of 8 estimates \nsignificance level used: alpha = 0.05 \nNOTE: If two or more means share the same grouping symbol,\n      then we cannot show them to be different.\n      But we also did not show them to be the same. \n```\n:::\n\n```{.r .cell-code}\naov_fer <- lm ( log (FER) ~ TRAT + BLOCO,\n               data = soja) ##Estou transformando aqui\nanova(aov_fer)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAnalysis of Variance Table\n\nResponse: log(FER)\n          Df  Sum Sq Mean Sq F value    Pr(>F)    \nTRAT       7 11.5210 1.64585 42.9665 4.838e-11 ***\nBLOCO      3  0.2064 0.06880  1.7961    0.1788    \nResiduals 21  0.8044 0.03831                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n\n```{.r .cell-code}\nlibrary(performance)\ncheck_heteroscedasticity(aov_fer)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nWarning: Heteroscedasticity (non-constant error variance) detected (p = 0.035).\n```\n:::\n\n```{.r .cell-code}\ncheck_normality(aov_fer)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOK: residuals appear as normally distributed (p = 0.255).\n```\n:::\n\n```{.r .cell-code}\nlibrary(emmeans)\nmedias_fer <- emmeans(aov_fer, ~ TRAT, type = \"response\") ##como transformei, acrescento essa função para ele pegar as médias verdadeiras\nmedias_fer\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n TRAT response    SE df lower.CL upper.CL\n 1       20.02 1.959 21    16.33    24.54\n 2        5.68 0.556 21     4.63     6.96\n 3        3.81 0.373 21     3.11     4.67\n 4        3.08 0.301 21     2.51     3.78\n 5        3.24 0.317 21     2.64     3.97\n 6        2.98 0.292 21     2.43     3.65\n 7        3.37 0.330 21     2.75     4.13\n 8        3.48 0.341 21     2.84     4.27\n\nResults are averaged over the levels of: BLOCO \nConfidence level used: 0.95 \nIntervals are back-transformed from the log scale \n```\n:::\n\n```{.r .cell-code}\npwpm(medias_fer)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        1       2       3       4       5       6       7       8\n1 [20.02]  <.0001  <.0001  <.0001  <.0001  <.0001  <.0001  <.0001\n2   3.525 [ 5.68]  0.1252  0.0048  0.0110  0.0028  0.0204  0.0343\n3   5.259   1.492 [ 3.81]  0.7832  0.9335  0.6440  0.9843  0.9976\n4   6.500   1.844   1.236 [ 3.08]  0.9999  1.0000  0.9976  0.9842\n5   6.178   1.753   1.175   0.951 [ 3.24]  0.9984  1.0000  0.9994\n6   6.721   1.906   1.278   1.034   1.088 [ 2.98]  0.9842  0.9431\n7   5.945   1.686   1.130   0.915   0.962   0.885 [ 3.37]  1.0000\n8   5.750   1.631   1.093   0.885   0.931   0.856   0.967 [ 3.48]\n\nRow and column labels: TRAT\nUpper triangle: P values   null = 1  adjust = \"tukey\"\nDiagonal: [Estimates] (response)   type = \"response\"\nLower triangle: Comparisons (ratio)   earlier vs. later\n```\n:::\n\n```{.r .cell-code}\nlibrary(multcomp)\ncld(medias_fer, Letters = LETTERS)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n TRAT response    SE df lower.CL upper.CL .group\n 6        2.98 0.292 21     2.43     3.65  A    \n 4        3.08 0.301 21     2.51     3.78  A    \n 5        3.24 0.317 21     2.64     3.97  A    \n 7        3.37 0.330 21     2.75     4.13  A    \n 8        3.48 0.341 21     2.84     4.27  A    \n 3        3.81 0.373 21     3.11     4.67  AB   \n 2        5.68 0.556 21     4.63     6.96   B   \n 1       20.02 1.959 21    16.33    24.54    C  \n\nResults are averaged over the levels of: BLOCO \nConfidence level used: 0.95 \nIntervals are back-transformed from the log scale \nP value adjustment: tukey method for comparing a family of 8 estimates \nTests are performed on the log scale \nsignificance level used: alpha = 0.05 \nNOTE: If two or more means share the same grouping symbol,\n      then we cannot show them to be different.\n      But we also did not show them to be the same. \n```\n:::\n\n```{.r .cell-code}\naov_prod <- lm (PROD ~ TRAT + BLOCO,\n               data = soja)\nanova(aov_prod)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAnalysis of Variance Table\n\nResponse: PROD\n          Df  Sum Sq Mean Sq F value  Pr(>F)  \nTRAT       7 2993906  427701  2.6367 0.04021 *\nBLOCO      3  105665   35222  0.2171 0.88340  \nResiduals 21 3406431  162211                  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n\n```{.r .cell-code}\nlibrary(performance)\ncheck_heteroscedasticity(aov_prod)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOK: Error variance appears to be homoscedastic (p = 0.215).\n```\n:::\n\n```{.r .cell-code}\ncheck_normality(aov_prod)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nOK: residuals appear as normally distributed (p = 0.542).\n```\n:::\n\n```{.r .cell-code}\nlibrary(emmeans)\nmedias_prod <- emmeans(aov_prod, ~ TRAT)\nmedias_prod\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n TRAT emmean  SE df lower.CL upper.CL\n 1      4219 201 21     3800     4638\n 2      4935 201 21     4516     5354\n 3      5110 201 21     4691     5529\n 4      5140 201 21     4721     5559\n 5      5122 201 21     4703     5541\n 6      5256 201 21     4837     5675\n 7      5128 201 21     4709     5546\n 8      5078 201 21     4659     5497\n\nResults are averaged over the levels of: BLOCO \nConfidence level used: 0.95 \n```\n:::\n\n```{.r .cell-code}\npwpm(medias_prod)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        1       2       3       4       5       6       7      8\n1  [4219]  0.2430  0.0792  0.0640  0.0728  0.0272  0.0700 0.0985\n2  -715.8  [4935]  0.9983  0.9953  0.9974  0.9430  0.9968 0.9995\n3  -890.8  -175.0  [5110]  1.0000  1.0000  0.9994  1.0000 1.0000\n4  -921.0  -205.3   -30.3  [5140]  1.0000  0.9999  1.0000 1.0000\n5  -902.8  -187.0   -12.0    18.3  [5122]  0.9997  1.0000 1.0000\n6 -1037.0  -321.3  -146.3  -116.0  -134.3  [5256]  0.9998 0.9981\n7  -908.3  -192.5   -17.5    12.8    -5.5   128.8  [5127] 1.0000\n8  -859.0  -143.3    31.7    62.0    43.7   178.0    49.2 [5078]\n\nRow and column labels: TRAT\nUpper triangle: P values   adjust = \"tukey\"\nDiagonal: [Estimates] (emmean) \nLower triangle: Comparisons (estimate)   earlier vs. later\n```\n:::\n\n```{.r .cell-code}\nlibrary(multcomp)\nmedias_prod_group <- cld(medias_prod, Letters = LETTERS)\n```\n:::\n\n\nComo a variável fer, as variâncias não eram homogêneas foi feita a transformação por Box Cox\n\n\n::: {.cell}\n\n```{.r .cell-code}\nb <- boxcox(lm(soja$FER ~1))\n```\n\n::: {.cell-output-display}\n![](Aula7_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n```{.r .cell-code}\nlambda <- b$x[which.max(b$y)]\nlambda \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -1.555556\n```\n:::\n\n```{.r .cell-code}\nsoja$FER2 <- (soja$FER ^ lambda - 1)/ lambda\nsoja$FER2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] 0.6350214 0.6372165 0.6385564 0.6356880 0.6078962 0.5684565 0.6175462\n [8] 0.5902763 0.6032606 0.5512801 0.4882973 0.5684565 0.5684565 0.5264644\n[15] 0.4882973 0.5264644 0.5512801 0.5512801 0.5264644 0.5264644 0.5512801\n[22] 0.4882973 0.5264644 0.5264644 0.5512801 0.5512801 0.5264644 0.5512801\n[29] 0.5684565 0.5512801 0.5264644 0.5512801\n```\n:::\n\n```{.r .cell-code}\naov_fer<-lm(log(FER2)~ TRAT + BLOCO,\n             data=soja)\nanova(aov_fer)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAnalysis of Variance Table\n\nResponse: log(FER2)\n          Df   Sum Sq   Mean Sq F value    Pr(>F)    \nTRAT       7 0.125861 0.0179801 11.3509 6.763e-06 ***\nBLOCO      3 0.020357 0.0067856  4.2837   0.01655 *  \nResiduals 21 0.033265 0.0015840                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n:::\n\n\nPrimeiramente, foi um data frame df_prod a partir dos resultados de médias marginais agrupadas medias_prod_group. Em seguida, foi utilizada a função ggplot para criar um gráfico de pontos com a variável TRAT no eixo x e emmean no eixo y, e os limites do eixo y são definidos entre 2000 e 7000. Adicionou-se uma barra de erro com `geom_errorbar`, onde os limites mínimo (lower.CL) e máximo (upper.CL) são especificados. O gráfico é anotado com a letra \"A\" em uma posição específica utilizando a função `annotate`. A função `knitr::kable` foi utilizada para criar uma tabela formatada com as colunas TRAT, emmean e .group do data frame df_prod, adequada para inclusão em um artigo. A biblioteca `writexl` foi carregada para gerar um arquivo Excel a partir do data frame df_prod, que é salvo como \"df_prod.xlsx\".\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_prod <- data.frame(medias_prod_group)\ndf_prod |>\n  ggplot(aes(TRAT, emmean))+\n  geom_point()+\n  ylim(2000,7000)+\n  geom_errorbar(aes(min = lower.CL,\n                    max = upper.CL),\n                width = 0.1)+\nannotate( geom = \"text\", x = 1.1, y = 4200,\n          label = \"A\") #exemplo de como coloca letra no gráfico\n```\n\n::: {.cell-output-display}\n![](Aula7_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n\n```{.r .cell-code}\nknitr::kable(df_prod |>  dplyr ::select (TRAT, emmean, .group)) ##Fazer a tabela do artigo, já sai todas as informações\n```\n\n::: {.cell-output-display}\n|   |TRAT |  emmean|.group |\n|:--|:----|-------:|:------|\n|1  |1    | 4219.25|A      |\n|2  |2    | 4935.00|AB     |\n|8  |8    | 5078.25|AB     |\n|3  |3    | 5110.00|AB     |\n|5  |5    | 5122.00|AB     |\n|7  |7    | 5127.50|AB     |\n|4  |4    | 5140.25|AB     |\n|6  |6    | 5256.25|B      |\n:::\n\n```{.r .cell-code}\nlibrary(writexl) #Gera sua tabela no excel pronta\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'writexl' was built under R version 4.3.3\n```\n:::\n\n```{.r .cell-code}\nwrite_xlsx(df_prod, \"df_prod.xlsx\")\n```\n:::\n",
    "supporting": [
      "Aula7_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}