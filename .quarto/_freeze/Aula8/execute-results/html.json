{
  "hash": "9f6d4d016097052dfa43f6b8ed4ae5b5",
  "result": {
    "markdown": "---\ntitle: \"Aula 8\"\nformat: html\neditor: visual\n---\n\n\n# Importação de dados\n\nUtilizamos o pacote `gsheet`, para importar uma planilha no Google Drive através da função `gsheet2tbl`.Após a importação, o dataframe severidade é exibido para verificar se os dados foram carregados corretamente.A coluna rep do dataframe severidade é convertida para fator usando o operador \\|\\> e a função `mutate` do pacote `dplyr`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gsheet)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'gsheet' was built under R version 4.3.3\n```\n:::\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\nseveridade <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=1807247585\")\nseveridade\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 60 × 4\n   Irrigation   rep   day severity\n   <chr>      <dbl> <dbl>    <dbl>\n 1 Furrow         1     0     0.01\n 2 Furrow         2     0     0.01\n 3 Furrow         3     0     0.01\n 4 Furrow         1     7     0.04\n 5 Furrow         2     7     0.04\n 6 Furrow         3     7     0.04\n 7 Furrow         1    14     0.1 \n 8 Furrow         2    14     0.1 \n 9 Furrow         3    14     0.11\n10 Furrow         1    21     0.11\n# ℹ 50 more rows\n```\n:::\n\n```{.r .cell-code}\nseveridade <- severidade |>\n  mutate(rep = as.factor(rep))\n```\n:::\n\n\nCriamos um gráfico visualização com vários painéis, cada um mostrando a severidade média dos dados (mean_sev) plotada ao longo dos dias (day), segmentada por tipo de irrigação (Irrigation).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats   1.0.0     ✔ readr     2.1.5\n✔ ggplot2   3.4.4     ✔ stringr   1.5.1\n✔ lubridate 1.9.3     ✔ tibble    3.2.1\n✔ purrr     1.0.2     ✔ tidyr     1.3.0\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nseveridade |> \n  group_by(day, Irrigation) |> \n  summarise(mean_sev = mean(severity)) |> \n  ggplot(aes(day, mean_sev)) +\n   geom_point(which = 0.05)+ \n  geom_line()+\n  facet_wrap(~~Irrigation)+\n  labs(x = \"Days\",\n  y = \"Mean of Severity\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'day'. You can override using the `.groups`\nargument.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in geom_point(which = 0.05): Ignoring unknown parameters: `which`\n```\n:::\n\n::: {.cell-output-display}\n![](Aula8_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n# Cálculo da Área abaixo da curva de progresso da doença\n\nCalculamos a área abaixo da curva de progresso da doença, utilizando a função `AUDPC` do pacote  `agricolae` e `dplyr` para diferentes combinações de irrigação e repetição\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Carregar o pacote agricolae\nlibrary(agricolae)\nlibrary(dplyr)\n\n# Supondo que o dataframe 'severidade' exista e tenha as colunas 'day', 'severity', 'Irrigation' e 'rep'\n# Corrigindo a função para 'audpc'\nresult <- severidade |>\n  group_by(Irrigation, rep) |>\n  summarise(aacpd = audpc(severity, day))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'Irrigation'. You can override using the\n`.groups` argument.\n```\n:::\n\n```{.r .cell-code}\n# Visualizar o resultado\nprint(result)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 3\n# Groups:   Irrigation [2]\n  Irrigation rep   aacpd\n  <chr>      <fct> <dbl>\n1 Drip       1      13.0\n2 Drip       2      13.9\n3 Drip       3      13.3\n4 Furrow     1      13.5\n5 Furrow     2      14.1\n6 Furrow     3      13.7\n```\n:::\n:::\n\n\nCarregamos o pacote `epifitter`. Os dados foram agrupados por Irrigation (tipo de irrigação) e rep (repetição). Para cada grupo, a função AUDPC foi utilizada para calcular o AACPD, utilizando as colunas day e severity. O resultado é armazenado em uma nova coluna chamada aacpd no data frame curve2. Um modelo linear m_curve foi ajustado para prever o aacpd (severidade da doença) com base em Irrigation (tipo de irrigação) e rep (repetição) como variáveis independentes. O modelo foi ajustado utilizando o data frame curve2.A função anova foi aplicada ao modelo m_curve para realizar a ANOVA. A ANOVA testou se as variáveis independentes (Irrigation e rep) têm um efeito estatisticamente significativo na variável dependente (aacpd). A função cv.model do pacote agricolae foi aplicada ao modelo m_curve para calcular o CV. O CV mede a variabilidade do aacpd em relação à sua média.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(epifitter)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'epifitter' was built under R version 4.3.3\n```\n:::\n\n```{.r .cell-code}\ncurve2 <- severidade|> \ngroup_by(Irrigation, rep) |> \n  summarise(aacpd = AUDPC(day,severity))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'Irrigation'. You can override using the\n`.groups` argument.\n```\n:::\n\n```{.r .cell-code}\nm_curve <- lm(aacpd ~ Irrigation + factor(rep), data = curve2)\nanova(m_curve)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAnalysis of Variance Table\n\nResponse: aacpd\n            Df  Sum Sq  Mean Sq F value  Pr(>F)  \nIrrigation   1 0.23602 0.236017  10.605 0.08275 .\nfactor(rep)  2 0.61291 0.306454  13.771 0.06770 .\nResiduals    2 0.04451 0.022254                  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n\n```{.r .cell-code}\nlibrary(agricolae)\ncv.model(m_curve)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1.097572\n```\n:::\n:::\n",
    "supporting": [
      "Aula8_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}