---
title: "Aula 6"
format: html
editor: visual
---

# Análise Inferencial

Carregamos o pacote `gsheet` para a importação dos dados do Google Drive

```{r}
library(gsheet)

mg <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=983033137")
```

## Visualização dos Dados

```{r}
library(tidyverse)
mg |>
  ggplot(aes(trat,comp))+
  geom_boxplot()
```

# Para Grupos independentes

Transformamos os dados com a função `pivot_wider`, transformando os dados longos em formato largo.

```{r}

mg2 <- mg |>
  pivot_wider(names_from = trat,
              values_from = comp )

teste1 <- t.test(mg2$control, mg2$Mg2)

shapiro.test(mg2$control)
hist(mg2$Mg2)
var.test(mg2$control, mg2$Mg2)

qqnorm(mg2$Mg2)
qqline(mg2$Mg2)


library(report)
report(teste1)
```

Utilizamos O teste t de Student para verificar se há uma diferença significativa entre as médias das duas condições (control e Mg2).

```{r}
teste1 <- t.test(mg2$control, mg2$Mg2)

```

Usamos o teste de Shapiro-Wilk para verificar a normalidade dos dados. Histograma para visualizar a distribuição dos dados. Teste de homogeneidade de variâncias para verificar se as variâncias dos grupos são semelhantes. Q-Q plot para uma inspeção visual da normalidade dos dados. A biblioteca report utilizamos para gerar um relatório detalhado e compreensível dos resultados do teste t.

```{r}
shapiro.test(mg2$control)
hist(mg2$Mg2)
var.test(mg2$control, mg2$Mg2)

qqnorm(mg2$Mg2)
qqline(mg2$Mg2)


library(report)
report(teste1)
```

# Dois grupos dependentes

Carregamos o arquivo de uma planilha do Google Drive utilizando a função `gsheet2tbl` e plotamos um gráfico boxplot utilizando a função `geom_boxplot`.

```{r}

library(gsheet)
library(ggplot2)

escala <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=1729131173")

escala |>
  ggplot(aes(assessment,acuracia))+
  geom_boxplot()
```

Os dados foram reorganizados de um formato longo para um formato largo usando `pivot_wider` para facilitar a comparação entre tratamentos.

```{r}

escala2 <-escala |>
  select(assessment,rater,acuracia) |>
  pivot_wider(names_from = assessment,
              values_from = acuracia)

shapiro.test(escala2$Unaided)
shapiro.test(escala2$Aided1)
var.test(escala2$Unaided, escala2$Aided1)

t.test(escala2$Aided1, escala2$Unaided,
                 paired = TRUE,
                 var.equal = FALSE )

```

Utilizamos o teste Shapiro-Wilk para Verificar se as variáveis Unaided e Aided1 seguiam uma distribuição normal. O var.test verificou se as variâncias eram homogêneas e o teste t utilizamos para comparar as médias das variáveis Aided1 e Unaided em pares, assumindo que os dados são dependentes.

```{r}
shapiro.test(escala2$Unaided)
shapiro.test(escala2$Aided1)
var.test(escala2$Unaided, escala2$Aided1)

t.test(escala2$Aided1, escala2$Unaided,
                 paired = TRUE,
                 var.equal = FALSE )
```

# Teste não paramétrico

Utilizamos o teste Shapiro-Wilk para Verificar se as variáveis Unaided e Aided1 seguiam uma distribuição normal. O var.test verificou se as variâncias eram homogêneas. O teste de Wilcoxon pareado (também conhecido como teste de postos sinalizados de Wilcoxon) é uma alternativa não paramétrica ao teste t pareado. Ele é usado quando os dados não atendem aos pressupostos de normalidade necessários para o teste t pareado.

```{r}

shapiro.test(escala2$Unaided)
shapiro.test(escala2$Aided1)
var.test(escala2$Unaided, escala2$Aided1)

wilcox.test(escala2$Aided1,
            escala2$Unaided,
            paired = TRUE)
```

# Três ou mais grupos independentes

Utilizamos a função `gsheet2tbl` para carregar os dados da planilha do Google Drive. Confeccionamos um gráfico de dispersão para ajudar a visualizar a relação entre as variáveis especie e tcm, com cada ponto representando uma observação no dataset. A função geom_jitter ajuda a evitar a sobreposição de pontos, facilitando a visualização das distribuições dos dados.

```{r}
micelial <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=959387827")

  micelial |>
  ggplot (aes(especie,tcm))+
  geom_jitter(width = 0.05)

```

Realizamos uma análise de variância (ANOVA) no modelo ajustado m1 para testar a significância do preditor especie. Depois criamos um histograma dos resíduos do modelo para visualizar a distribuição dos erros. Realizamos o teste de Shapiro-Wilk para verificar a normalidade dos resíduos do modelo. Realizamos o teste de Bartlett para verificar a homogeneidade das variâncias entre os grupos definidos por especie. Usamos a função `emmeans` do pacote `emmeans` para calcular as médias estimadas dos níveis de especie. Utilizamos o pacote `multcomp` e a função `cld`(compact letter display) para realizar comparações múltiplas das médias e adicionar letras compactas para indicar grupos significativamente diferentes.O pacote `DHARMa` foi utilizado para simular resíduos do modelo m1 e criar um gráfico de diagnóstico dos resíduos simulados. O pacote `performance` foi usado para verificar a normalidade dos resíduos `check_normality`, a heteroscedasticidade `check_heteroscedasticity` e realizar uma verificação abrangente do modelo `check_model`.

```{r}

  m1 <-lm(tcm ~ especie, data = micelial)
anova (m1)
summary(m1)
hist(m1$residuals)
shapiro.test(m1$residuals)
bartlett.test(tcm ~ especie, data = micelial)

library(emmeans)

medias1 <- emmeans(m1, ~especie)
library(multcomp)
library(multcompView)
cld(medias1)

library(DHARMa)
plot(simulateResiduals(m1))

library(performance)
check_normality(m1)
check_heteroscedasticity(m1)
check_model(m1)
```

Carregamos o pacote `tidyverse`. Foi carregado o dataset InsectSprays e o armazena na variável inseticida. Contamos o número de ocorrências de cada tipo de spray no dataset, fornecendo uma visão rápida da distribuição dos diferentes sprays.

```{r}
library(tidyverse)

inseticida <- InsectSprays
?InsectSprays

inseticida |>
  count (spray)
```

### Confeccionamos um gráfico de pontos para visualização dos dados

```{r}

inseticida |>
   ggplot (aes(spray,count))+
   geom_jitter(width = 0.05)


```

### Confeccionamos um gráfico boxplot para visualização dos dados

```{r}

inseticida |>
  ggplot(aes(spray,count))+
  geom_boxplot()
```

### Seguimos os mesmos procedimentos realizados anteriormente

```{r}

m1 <- lm (count ~ spray, data = inseticida)
summary(m1)
anova (m1)

library(emmeans)
m1_medias <- emmeans(m1, ~spray)
plot(m1_medias)
library(multcomp)
cld(m1_medias)

m1$residuals
hist(m1$residuals)
qqnorm(m1$residuals)
qqline(m1$residuals)
shapiro.test(m1$residuals)
bartlett.test(count ~ spray,
              data = inseticida)

library(performance)
check_normality(m1)
check_heteroscedasticity(m1)

library(DHARMa)
plot(simulateResiduals(m1))
```

# Alternativa 1 - transformação

Como os dados não foram normais e as variâncias não foram homogêneas realizamos a transformação dos dados utilizando a função `mutate`, count2 é a raiz quadrada dos valores na coluna count. Esta transformação é frequentemente usada para estabilizar a variância ou aproximar a normalidade dos dados. Confeccionamos um gráfico boxplot mostrando a distribuição da raiz quadrada das contagens de insetos (count2) para cada tipo de spray (spray). Cada boxplot representa a variação de count2 dentro de cada grupo de spray.

```{r}
inseticida <-inseticida |>
  mutate(count2 = sqrt (count))

inseticida |>
  ggplot(aes(spray,count2))+
  geom_boxplot()

```

Realizamos uma análise de variância (ANOVA) no modelo ajustado. Usamos `emmeans` para calcular as médias estimadas dos níveis de spray.Plotamos essas médias estimadas.Usamos `cld` para adicionar letras compactas indicando grupos significativamente diferentes. `pwpm(m2_medias)` e `pwpp(m2_medias)` mostram as comparações de pares em formato de tabela e gráfico, `pairs(m2_medias)` exibe os pares de médias. Plotamos os resíduos do modelo. Realizamos o teste de Shapiro-Wilk para verificar a normalidade dos resíduos. Realizamos o teste de Bartlett para verificar a homogeneidade das variâncias.Usamos funções do pacote `performance` para verificar a normalidade dos resíduos e a heteroscedasticidade. Usamos o pacote `DHARMa` para simular resíduos do modelo e plotamos esses resíduos para diagnóstico.Usamos a função `boxcox` do pacote `MASS` para encontrar a transformação Box-Cox que estabiliza a variância e normaliza os dados. Calculamos o valor de lambda que maximiza a função de log-verossimilhança. Transformamos a variável count usando o valor de lambda obtido.

```{r}

m2 <- lm (count2 ~ spray, data = inseticida)
summary(m2)
anova (m2)

library(emmeans)
m2_medias <- emmeans(m2, ~spray)
plot(m2_medias)
library(multcomp)
cld(m2_medias)

pwpm(m2_medias)
pwpp(m2_medias)
pairs(m2_medias)


m2$residuals
hist(m2$residuals)
qqnorm(m2$residuals)
qqline(m2$residuals)
shapiro.test(m2$residuals)
bartlett.test(count2 ~ spray,
              data = inseticida)


library(performance)
check_normality(m2)
check_heteroscedasticity(m2)

library(DHARMa)
plot(simulateResiduals(m2))

#Transformação Box-Cox (encontra uma equação que estabiliza a variância e normaliza)

library(MASS)

b <- boxcox(lm(inseticida$count+0.1~1))
lambda <- b$x[which.max(b$y)]
lambda <-

inseticida$count3 <- (inseticida$count ^ lambda - 1)/ lambda
inseticida$count3

```

# Alternativa 2 - não paramétrico

Carregamos o pacote `agricolae` para análise de dados, e realizamos o teste de Kruskal-Wallis para avaliar se há diferenças significativas nas distribuições de count entre os diferentes níveis de spray. Realizamos uma análise de comparações múltiplas após o teste de Kruskal-Wallis, agrupando os tratamentos que não são significativamente diferentes entre si.

```{r}
library(agricolae)

kruskal.test(count ~spray, 
             data = inseticida)

m3 <- kruskal(inseticida$count,
        inseticida$spray,
        group = TRUE)
m3
```

# Alternativa 3 - GLMs

Primeiramente foi utilizado o modelo linear misto (GLM), utilizando a família Poisson, Os GLMs são uma classe de modelos estatísticos flexíveis que permitem que a variável de resposta tenha distribuições de erro diferentes da distribuição normal, que é assumida nos modelos de regressão linear clássicos. Posteriormente, realizamos uma análise de variância (Anova), utilizamos o pacote `car` para fornecer uma tabela ANOVA do Tipo II ou Tipo III para o modelo, que pode ser mais informativa em alguns contextos. Usamos o comando `plot(simulateResiduals(m4))` para plotar os resíduos do modelo usando a função `simulateResiduals`, que é útil para verificar a adequação do modelo. Calculamos as médias marginais estimadas (EMMs) para os níveis do fator spray, na escala da resposta. Usamos a função `cld` para gerar uma exibição compacta de letras para as EMMs, o que ajuda a interpretar as comparações par a par.

```{r}
m4 <- glm(count ~ spray,
          family= poisson,
          data = inseticida)

summary(m4)
anova(m4)
library(car)
Anova (m4)

plot(simulateResiduals(m4))
m4_medias <- emmeans (m4, ~spray, 
                      type= "response")
cld(m4_medias)

```

##Anova fatorial

Importamos a planilha do Google Drive utilizando a função `gsheet2tbl` e criamos um gráfico de pontos para visualização dos dados.

```{r}
library(gsheet)
li <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=2023059672")


li |>
ggplot(aes(factor(dose), severity, color = factor (dose)))+
  geom_jitter(width=0.1)+
  facet_wrap(~treat)
 
```

##Modelo fatorial (two-way anova)

Ajustamos um modelo linear com a variável resposta severity e os preditores treat e dose, incluindo a interação entre eles, e realizamos a ANOVA. Plotamos resíduos simulados para verificar a adequação do modelo.: Calcula as EMMs para dose, condicionadas por treat, utilizando o comando `emmeans(mf, ~ dose | treat)` e visualizamos as letras para para as EMMs, facilitando interpretação das comparações.

```{r}


mf <- lm (severity ~ treat*factor(dose), 
          data = li)
mf
anova(mf)
plot(simulateResiduals(mf))

mf_medias <- emmeans( mf, ~ dose  | treat)
mf_medias
cld(mf_medias)

```
