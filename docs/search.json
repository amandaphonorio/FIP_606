[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Sobre a página",
    "section": "",
    "text": "Essa página contém os scripts das aulas que foram ministradas no ano de 2024 pelo professor Emerson Del Ponte na disciplina Análise e Visualização de Dados em Fitopatologia do programa de pós-graduação em Fitopatologia da Universidade Federal de Viçosa."
  },
  {
    "objectID": "Aula7.html",
    "href": "Aula7.html",
    "title": "Aula 7",
    "section": "",
    "text": "Importanto os dados\nCarregamos os pacotes tidyverse (para manipulação e visualização de dados) e gsheet (para ler dados do Google Sheets). Em seguida, a função gsheet2tbl foi é utilizada para ler os dados do Google Drive, armazenando-os no data frame soja. Por fim, a função mutate do pacote dplyr (parte do tidyverse) foi usada para converter as colunas TRAT e BLOCO em fatores, garantindo que esses dados sejam tratados como variáveis categóricas no data frame.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(gsheet)\n\nWarning: package 'gsheet' was built under R version 4.3.3\n\nsoja &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=866852711\")\n\nsoja &lt;- soja |&gt;\n  mutate(TRAT = as.factor(TRAT),\n         BLOCO = as.factor(BLOCO))\n\n\nVisualização dos dados\nCarregamos as bibliotecas ggplot2 (para criação de gráficos) e Hmisc (para funções estatísticas). Em seguida, os dados do data frame soja foram utilizados para criar um gráfico utilizando a função ggplot. Os dados são mapeados de forma que a variável TRAT é representada no eixo x e a variável DFC no eixo y. A função geom_jitter adiciona um gráfico de dispersão com um pequeno desvio horizontal (width = 0.05) para evitar sobreposição de pontos, usando a cor cinza (“gray”). A função stat_summary adiciona um resumo estatístico, onde fun.data = \"mean_cl_boot\" calcula a média e o intervalo de confiança utilizando o método bootstrap, e os resultados são exibidos em vermelho (“red”) com uma espessura de linha de 0.5 e uma opacidade de 0.5. Finalmente, o objeto dfc armazena o gráfico resultante.\n\nlibrary(ggplot2)\nlibrary(Hmisc)\n\nWarning: package 'Hmisc' was built under R version 4.3.3\n\n\n\nAttaching package: 'Hmisc'\n\n\nThe following objects are masked from 'package:dplyr':\n\n    src, summarize\n\n\nThe following objects are masked from 'package:base':\n\n    format.pval, units\n\ndfc &lt;-soja |&gt;\n  ggplot(aes(TRAT, DFC))+\n  geom_jitter(width = 0.05, color = \n                \"gray\")+\n  stat_summary(fun.data = \n                 \"mean_cl_boot\", size = 0.5, color = \n                 \"red\", alpha = 0.5)\ndfc\n\n\n\n\nForam realizados as mesmas etapas igual ao item anterior\n\nfer &lt;-soja |&gt;\n  ggplot(aes(TRAT, FER))+\n  geom_jitter(width = 0.05, color = \n                \"gray\")+\n  stat_summary(fun.data = \n                 \"mean_cl_boot\", size = 0.5, color = \n                 \"red\", alpha = 0.5)\nfer\n\n\n\n\nForam realizados as mesmas etapas igual aos itens anteriores\n\nprod &lt;-soja |&gt;\n  ggplot(aes(TRAT, PROD))+\n  geom_jitter(width = 0.05, color = \n                \"gray\")+\n  stat_summary(fun.data = \n                 \"mean_cl_boot\", size = 0.5, color = \n                 \"red\", alpha = 0.5)\nprod\n\n\n\n\nCarregamos o pacote patchwork a para facilitar a combinação de múltiplos gráficos em uma única visualização. Em seguida, o código combina os gráficos dfc, prod, e fer lado a lado em uma única visualização utilizando a sintaxe dfc | prod | fer. A barra vertical (|) é usada para colocar os gráficos lado a lado.\n\nlibrary(patchwork)\n\nWarning: package 'patchwork' was built under R version 4.3.3\n\n(dfc|prod|fer)\n\n\n\n\n\n\n\nAnova\nPrimeiramente, criamos um modelo linear aov_dfc para a variável DFC em função de TRAT e BLOCO utilizando a função lm. Em seguida, a análise de variância (ANOVA) é realizada com a função anova. Carregamos o pacote performance para verificar a heterocedasticidade e a normalidade dos resíduos do modelo aov_dfc utilizando as funções check_heteroscedasticity e check_normality. A biblioteca emmeans é utilizada para calcular as médias marginais ajustadas dos níveis de TRAT, armazenadas em medias_dfc. A função pwpm exibe a matriz de comparações múltiplas entre as médias. A biblioteca multcomp é usada para gerar letras indicadoras de agrupamento homogêneo com a função cld. As mesmas etapas foram realizadas para as variáveis fer e prod.\n\naov_dfc &lt;- lm (DFC ~ TRAT + BLOCO,\n               data = soja)\nanova(aov_dfc)\n\nAnalysis of Variance Table\n\nResponse: DFC\n          Df  Sum Sq Mean Sq F value    Pr(&gt;F)    \nTRAT       7 149.299 21.3284 51.5490 8.218e-12 ***\nBLOCO      3   0.461  0.1537  0.3716    0.7743    \nResiduals 21   8.689  0.4138                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nlibrary(performance)\n\nWarning: package 'performance' was built under R version 4.3.3\n\ncheck_heteroscedasticity(aov_dfc)\n\nOK: Error variance appears to be homoscedastic (p = 0.532).\n\ncheck_normality(aov_dfc)\n\nOK: residuals appear as normally distributed (p = 0.978).\n\nlibrary(emmeans)\n\nWarning: package 'emmeans' was built under R version 4.3.3\n\nmedias_dfc &lt;- emmeans(aov_dfc, ~ TRAT)\nmedias_dfc\n\n TRAT emmean    SE df lower.CL upper.CL\n 1     10.88 0.322 21    10.21    11.54\n 2      6.42 0.322 21     5.76     7.09\n 3      6.05 0.322 21     5.38     6.72\n 4      4.75 0.322 21     4.08     5.42\n 5      4.20 0.322 21     3.53     4.87\n 6      4.00 0.322 21     3.33     4.67\n 7      4.08 0.322 21     3.41     4.74\n 8      4.58 0.322 21     3.91     5.24\n\nResults are averaged over the levels of: BLOCO \nConfidence level used: 0.95 \n\npwpm(medias_dfc)\n\n        1       2       3       4       5       6       7       8\n1 [10.87]  &lt;.0001  &lt;.0001  &lt;.0001  &lt;.0001  &lt;.0001  &lt;.0001  &lt;.0001\n2   4.450 [ 6.42]  0.9896  0.0249  0.0017  0.0006  0.0009  0.0107\n3   4.825   0.375 [ 6.05]  0.1329  0.0107  0.0040  0.0058  0.0628\n4   6.125   1.675   1.300 [ 4.75]  0.9202  0.7173  0.8072  0.9999\n5   6.675   2.225   1.850   0.550 [ 4.20]  0.9998  1.0000  0.9896\n6   6.875   2.425   2.050   0.750   0.200 [ 4.00]  1.0000  0.9020\n7   6.800   2.350   1.975   0.675   0.125  -0.075 [ 4.07]  0.9499\n8   6.300   1.850   1.475   0.175  -0.375  -0.575  -0.500 [ 4.57]\n\nRow and column labels: TRAT\nUpper triangle: P values   adjust = \"tukey\"\nDiagonal: [Estimates] (emmean) \nLower triangle: Comparisons (estimate)   earlier vs. later\n\nlibrary(multcomp)\n\nWarning: package 'multcomp' was built under R version 4.3.3\n\n\nCarregando pacotes exigidos: mvtnorm\n\n\nCarregando pacotes exigidos: survival\n\n\nCarregando pacotes exigidos: TH.data\n\n\nCarregando pacotes exigidos: MASS\n\n\n\nAttaching package: 'MASS'\n\n\nThe following object is masked from 'package:patchwork':\n\n    area\n\n\nThe following object is masked from 'package:dplyr':\n\n    select\n\n\n\nAttaching package: 'TH.data'\n\n\nThe following object is masked from 'package:MASS':\n\n    geyser\n\ncld(medias_dfc, Letters = LETTERS)\n\n TRAT emmean    SE df lower.CL upper.CL .group\n 6      4.00 0.322 21     3.33     4.67  A    \n 7      4.08 0.322 21     3.41     4.74  A    \n 5      4.20 0.322 21     3.53     4.87  A    \n 8      4.58 0.322 21     3.91     5.24  AB   \n 4      4.75 0.322 21     4.08     5.42  AB   \n 3      6.05 0.322 21     5.38     6.72   BC  \n 2      6.42 0.322 21     5.76     7.09    C  \n 1     10.88 0.322 21    10.21    11.54     D \n\nResults are averaged over the levels of: BLOCO \nConfidence level used: 0.95 \nP value adjustment: tukey method for comparing a family of 8 estimates \nsignificance level used: alpha = 0.05 \nNOTE: If two or more means share the same grouping symbol,\n      then we cannot show them to be different.\n      But we also did not show them to be the same. \n\naov_fer &lt;- lm ( log (FER) ~ TRAT + BLOCO,\n               data = soja) ##Estou transformando aqui\nanova(aov_fer)\n\nAnalysis of Variance Table\n\nResponse: log(FER)\n          Df  Sum Sq Mean Sq F value    Pr(&gt;F)    \nTRAT       7 11.5210 1.64585 42.9665 4.838e-11 ***\nBLOCO      3  0.2064 0.06880  1.7961    0.1788    \nResiduals 21  0.8044 0.03831                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nlibrary(performance)\ncheck_heteroscedasticity(aov_fer)\n\nWarning: Heteroscedasticity (non-constant error variance) detected (p = 0.035).\n\ncheck_normality(aov_fer)\n\nOK: residuals appear as normally distributed (p = 0.255).\n\nlibrary(emmeans)\nmedias_fer &lt;- emmeans(aov_fer, ~ TRAT, type = \"response\") ##como transformei, acrescento essa função para ele pegar as médias verdadeiras\nmedias_fer\n\n TRAT response    SE df lower.CL upper.CL\n 1       20.02 1.959 21    16.33    24.54\n 2        5.68 0.556 21     4.63     6.96\n 3        3.81 0.373 21     3.11     4.67\n 4        3.08 0.301 21     2.51     3.78\n 5        3.24 0.317 21     2.64     3.97\n 6        2.98 0.292 21     2.43     3.65\n 7        3.37 0.330 21     2.75     4.13\n 8        3.48 0.341 21     2.84     4.27\n\nResults are averaged over the levels of: BLOCO \nConfidence level used: 0.95 \nIntervals are back-transformed from the log scale \n\npwpm(medias_fer)\n\n        1       2       3       4       5       6       7       8\n1 [20.02]  &lt;.0001  &lt;.0001  &lt;.0001  &lt;.0001  &lt;.0001  &lt;.0001  &lt;.0001\n2   3.525 [ 5.68]  0.1252  0.0048  0.0110  0.0028  0.0204  0.0343\n3   5.259   1.492 [ 3.81]  0.7832  0.9335  0.6440  0.9843  0.9976\n4   6.500   1.844   1.236 [ 3.08]  0.9999  1.0000  0.9976  0.9842\n5   6.178   1.753   1.175   0.951 [ 3.24]  0.9984  1.0000  0.9994\n6   6.721   1.906   1.278   1.034   1.088 [ 2.98]  0.9842  0.9431\n7   5.945   1.686   1.130   0.915   0.962   0.885 [ 3.37]  1.0000\n8   5.750   1.631   1.093   0.885   0.931   0.856   0.967 [ 3.48]\n\nRow and column labels: TRAT\nUpper triangle: P values   null = 1  adjust = \"tukey\"\nDiagonal: [Estimates] (response)   type = \"response\"\nLower triangle: Comparisons (ratio)   earlier vs. later\n\nlibrary(multcomp)\ncld(medias_fer, Letters = LETTERS)\n\n TRAT response    SE df lower.CL upper.CL .group\n 6        2.98 0.292 21     2.43     3.65  A    \n 4        3.08 0.301 21     2.51     3.78  A    \n 5        3.24 0.317 21     2.64     3.97  A    \n 7        3.37 0.330 21     2.75     4.13  A    \n 8        3.48 0.341 21     2.84     4.27  A    \n 3        3.81 0.373 21     3.11     4.67  AB   \n 2        5.68 0.556 21     4.63     6.96   B   \n 1       20.02 1.959 21    16.33    24.54    C  \n\nResults are averaged over the levels of: BLOCO \nConfidence level used: 0.95 \nIntervals are back-transformed from the log scale \nP value adjustment: tukey method for comparing a family of 8 estimates \nTests are performed on the log scale \nsignificance level used: alpha = 0.05 \nNOTE: If two or more means share the same grouping symbol,\n      then we cannot show them to be different.\n      But we also did not show them to be the same. \n\naov_prod &lt;- lm (PROD ~ TRAT + BLOCO,\n               data = soja)\nanova(aov_prod)\n\nAnalysis of Variance Table\n\nResponse: PROD\n          Df  Sum Sq Mean Sq F value  Pr(&gt;F)  \nTRAT       7 2993906  427701  2.6367 0.04021 *\nBLOCO      3  105665   35222  0.2171 0.88340  \nResiduals 21 3406431  162211                  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nlibrary(performance)\ncheck_heteroscedasticity(aov_prod)\n\nOK: Error variance appears to be homoscedastic (p = 0.215).\n\ncheck_normality(aov_prod)\n\nOK: residuals appear as normally distributed (p = 0.542).\n\nlibrary(emmeans)\nmedias_prod &lt;- emmeans(aov_prod, ~ TRAT)\nmedias_prod\n\n TRAT emmean  SE df lower.CL upper.CL\n 1      4219 201 21     3800     4638\n 2      4935 201 21     4516     5354\n 3      5110 201 21     4691     5529\n 4      5140 201 21     4721     5559\n 5      5122 201 21     4703     5541\n 6      5256 201 21     4837     5675\n 7      5128 201 21     4709     5546\n 8      5078 201 21     4659     5497\n\nResults are averaged over the levels of: BLOCO \nConfidence level used: 0.95 \n\npwpm(medias_prod)\n\n        1       2       3       4       5       6       7      8\n1  [4219]  0.2430  0.0792  0.0640  0.0728  0.0272  0.0700 0.0985\n2  -715.8  [4935]  0.9983  0.9953  0.9974  0.9430  0.9968 0.9995\n3  -890.8  -175.0  [5110]  1.0000  1.0000  0.9994  1.0000 1.0000\n4  -921.0  -205.3   -30.3  [5140]  1.0000  0.9999  1.0000 1.0000\n5  -902.8  -187.0   -12.0    18.3  [5122]  0.9997  1.0000 1.0000\n6 -1037.0  -321.3  -146.3  -116.0  -134.3  [5256]  0.9998 0.9981\n7  -908.3  -192.5   -17.5    12.8    -5.5   128.8  [5127] 1.0000\n8  -859.0  -143.3    31.7    62.0    43.7   178.0    49.2 [5078]\n\nRow and column labels: TRAT\nUpper triangle: P values   adjust = \"tukey\"\nDiagonal: [Estimates] (emmean) \nLower triangle: Comparisons (estimate)   earlier vs. later\n\nlibrary(multcomp)\nmedias_prod_group &lt;- cld(medias_prod, Letters = LETTERS)\n\nComo a variável fer, as variâncias não eram homogêneas foi feita a transformação por Box Cox\n\nb &lt;- boxcox(lm(soja$FER ~1))\n\n\n\nlambda &lt;- b$x[which.max(b$y)]\nlambda \n\n[1] -1.555556\n\nsoja$FER2 &lt;- (soja$FER ^ lambda - 1)/ lambda\nsoja$FER2\n\n [1] 0.6350214 0.6372165 0.6385564 0.6356880 0.6078962 0.5684565 0.6175462\n [8] 0.5902763 0.6032606 0.5512801 0.4882973 0.5684565 0.5684565 0.5264644\n[15] 0.4882973 0.5264644 0.5512801 0.5512801 0.5264644 0.5264644 0.5512801\n[22] 0.4882973 0.5264644 0.5264644 0.5512801 0.5512801 0.5264644 0.5512801\n[29] 0.5684565 0.5512801 0.5264644 0.5512801\n\naov_fer&lt;-lm(log(FER2)~ TRAT + BLOCO,\n             data=soja)\nanova(aov_fer)\n\nAnalysis of Variance Table\n\nResponse: log(FER2)\n          Df   Sum Sq   Mean Sq F value    Pr(&gt;F)    \nTRAT       7 0.125861 0.0179801 11.3509 6.763e-06 ***\nBLOCO      3 0.020357 0.0067856  4.2837   0.01655 *  \nResiduals 21 0.033265 0.0015840                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nPrimeiramente, foi um data frame df_prod a partir dos resultados de médias marginais agrupadas medias_prod_group. Em seguida, foi utilizada a função ggplot para criar um gráfico de pontos com a variável TRAT no eixo x e emmean no eixo y, e os limites do eixo y são definidos entre 2000 e 7000. Adicionou-se uma barra de erro com geom_errorbar, onde os limites mínimo (lower.CL) e máximo (upper.CL) são especificados. O gráfico é anotado com a letra “A” em uma posição específica utilizando a função annotate. A função knitr::kable foi utilizada para criar uma tabela formatada com as colunas TRAT, emmean e .group do data frame df_prod, adequada para inclusão em um artigo. A biblioteca writexl foi carregada para gerar um arquivo Excel a partir do data frame df_prod, que é salvo como “df_prod.xlsx”.\n\ndf_prod &lt;- data.frame(medias_prod_group)\ndf_prod |&gt;\n  ggplot(aes(TRAT, emmean))+\n  geom_point()+\n  ylim(2000,7000)+\n  geom_errorbar(aes(min = lower.CL,\n                    max = upper.CL),\n                width = 0.1)+\nannotate( geom = \"text\", x = 1.1, y = 4200,\n          label = \"A\") #exemplo de como coloca letra no gráfico\n\n\n\nknitr::kable(df_prod |&gt;  dplyr ::select (TRAT, emmean, .group)) ##Fazer a tabela do artigo, já sai todas as informações\n\n\n\n\n\nTRAT\nemmean\n.group\n\n\n\n\n1\n1\n4219.25\nA\n\n\n2\n2\n4935.00\nAB\n\n\n8\n8\n5078.25\nAB\n\n\n3\n3\n5110.00\nAB\n\n\n5\n5\n5122.00\nAB\n\n\n7\n7\n5127.50\nAB\n\n\n4\n4\n5140.25\nAB\n\n\n6\n6\n5256.25\nB\n\n\n\n\nlibrary(writexl) #Gera sua tabela no excel pronta\n\nWarning: package 'writexl' was built under R version 4.3.3\n\nwrite_xlsx(df_prod, \"df_prod.xlsx\")"
  },
  {
    "objectID": "Aula5.html",
    "href": "Aula5.html",
    "title": "Aula 5",
    "section": "",
    "text": "Carregar pacote gsheet, utilizar a função gsheet2tbl para importar a tabela do Google Drive.\n\nlibrary(gsheet)\n\nWarning: package 'gsheet' was built under R version 4.3.3\n\nsabatina &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=1092065531\")\n\n\n\nCriar e filtrar sabatina 1 e sabatina 2 Carregar o pacote tidyverse, para selecionar e filtrar, foram usados as funções select e filter e para calcular a mediana, média e desvio padrão, foram usados as seguintes funções median, mean e sd, respectivamente.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nsabatina_1 &lt;- sabatina |&gt;\n  select(prova, nota) |&gt;\n  filter(prova ==\"1\")\nsabatina_1\n\n# A tibble: 22 × 2\n   prova  nota\n   &lt;dbl&gt; &lt;dbl&gt;\n 1     1  71.4\n 2     1  92.9\n 3     1  85.7\n 4     1  42.9\n 5     1 100  \n 6     1  85.7\n 7     1 100  \n 8     1  57.1\n 9     1 100  \n10     1  71.4\n# ℹ 12 more rows\n\nsabatina_2 &lt;- sabatina |&gt;\n  select (prova, nota) |&gt;\n  filter (prova ==\"2\")\nsabatina_2\n\n# A tibble: 22 × 2\n   prova  nota\n   &lt;dbl&gt; &lt;dbl&gt;\n 1     2  81.2\n 2     2  68.8\n 3     2  87.5\n 4     2  87.5\n 5     2  87.5\n 6     2 100  \n 7     2 100  \n 8     2 100  \n 9     2 100  \n10     2  43.8\n# ℹ 12 more rows\n\nmediana1 &lt;- median(sabatina_1$nota)\nmediana2 &lt;- median(sabatina_2$nota)\nmedia1 &lt;- mean(sabatina_1$nota)\nmedia2 &lt;- mean (sabatina_2$nota)\nsd1 &lt;- sd(sabatina_1$nota)\nsd2&lt;- sd(sabatina_2$nota)\n\n# A mediana, média e desvio padrão da nota da sabatina 1 foi de 85.7, 79,5 e 19,0, respectivamente.\n##A mediana, média e desvio padrão da nota da sabatina 2 foi de 84.4, 79,3 e 19,7, respectivamente.\n\n\n\n\nCarregar pacote ggplot2e utilizar a função geom_boxplot para confeccionar o gráfico.\n\nlibrary (ggplot2)\n\n  sabatina |&gt;\n  \n  ggplot(aes(prova,nota))+\n  geom_boxplot(color='black', fill='lightpink')+\n  ylim(0,100)+\n  labs(title= \"Frequência das notas\")+\n  facet_wrap(~prova,scales = \"free_x\")\n\nWarning: Continuous x aesthetic\nℹ did you forget `aes(group = ...)`?\n\n\n\n\n\n\n\nGráficos ggplot para cada subconjunto, foi carregado os pacotes ggthemes e patchwork. Com a função geom_vline, foi adicionado uma linha vertical na posição media1 e media2 de cor vermelha e estilo tracejado para cada gráfico. Os gráficos foram unidos com a função p1+p2 do pacote patchwork.\n\nlibrary(ggthemes)\nlibrary(patchwork)\n\nWarning: package 'patchwork' was built under R version 4.3.3\n\np1 &lt;- sabatina_1 |&gt;\n  ggplot (aes(x=nota))+\n  geom_histogram(bins= 5, fill = \"violet\", color = \"gray\")+\n  facet_wrap(~prova)+\n  theme_few()+\n  labs( y= \"Frequência\",\n       x= \"Nota\")+\n    geom_vline(xintercept = media1, color =\"red\", linetype =\"dashed\")\n  \np1\n\n\n\n  p2 &lt;- sabatina_2 |&gt;\n  ggplot (aes(x=nota))+\n  geom_histogram(bins= 5, fill = \"violet\", color = \"gray\")+\n  facet_wrap(~prova)+\n  theme_few()+\n  labs( y= \"Frequência\",\n       x= \"Nota\")+\n    geom_vline(xintercept = media2, color =\"red\", linetype =\"dashed\")\n  \np2\n\n\n\n(p1+p2) + plot_layout(guides = \"collect\",\n          axes= \"collect\")+\n          plot_annotation(title= \"Frequência das Notas Sabatinas 1 e 2 da disciplina FIP              606\",\n          caption= \"Source: Emerson Del Ponte (2024)\")\n\n\n\nggsave(\"patch_sabatinas.png\", width= 5, height = 4) \n#salvando os gráficos\n\nA média dos alunos na sabatina 1 foi de 7,955 e na sabatina 2 de 7,926"
  },
  {
    "objectID": "Aula5.html#calcular-média-mediana-e-desvio-padrão-das-notas-das-sabatinas-1-e-2",
    "href": "Aula5.html#calcular-média-mediana-e-desvio-padrão-das-notas-das-sabatinas-1-e-2",
    "title": "Aula 5",
    "section": "",
    "text": "Criar e filtrar sabatina 1 e sabatina 2 Carregar o pacote tidyverse, para selecionar e filtrar, foram usados as funções select e filter e para calcular a mediana, média e desvio padrão, foram usados as seguintes funções median, mean e sd, respectivamente.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nsabatina_1 &lt;- sabatina |&gt;\n  select(prova, nota) |&gt;\n  filter(prova ==\"1\")\nsabatina_1\n\n# A tibble: 22 × 2\n   prova  nota\n   &lt;dbl&gt; &lt;dbl&gt;\n 1     1  71.4\n 2     1  92.9\n 3     1  85.7\n 4     1  42.9\n 5     1 100  \n 6     1  85.7\n 7     1 100  \n 8     1  57.1\n 9     1 100  \n10     1  71.4\n# ℹ 12 more rows\n\nsabatina_2 &lt;- sabatina |&gt;\n  select (prova, nota) |&gt;\n  filter (prova ==\"2\")\nsabatina_2\n\n# A tibble: 22 × 2\n   prova  nota\n   &lt;dbl&gt; &lt;dbl&gt;\n 1     2  81.2\n 2     2  68.8\n 3     2  87.5\n 4     2  87.5\n 5     2  87.5\n 6     2 100  \n 7     2 100  \n 8     2 100  \n 9     2 100  \n10     2  43.8\n# ℹ 12 more rows\n\nmediana1 &lt;- median(sabatina_1$nota)\nmediana2 &lt;- median(sabatina_2$nota)\nmedia1 &lt;- mean(sabatina_1$nota)\nmedia2 &lt;- mean (sabatina_2$nota)\nsd1 &lt;- sd(sabatina_1$nota)\nsd2&lt;- sd(sabatina_2$nota)\n\n# A mediana, média e desvio padrão da nota da sabatina 1 foi de 85.7, 79,5 e 19,0, respectivamente.\n##A mediana, média e desvio padrão da nota da sabatina 2 foi de 84.4, 79,3 e 19,7, respectivamente."
  },
  {
    "objectID": "Aula5.html#visualizar-e-explorar-os-dados-por-meio-de-gráfico-boxplot",
    "href": "Aula5.html#visualizar-e-explorar-os-dados-por-meio-de-gráfico-boxplot",
    "title": "Aula 5",
    "section": "",
    "text": "Carregar pacote ggplot2e utilizar a função geom_boxplot para confeccionar o gráfico.\n\nlibrary (ggplot2)\n\n  sabatina |&gt;\n  \n  ggplot(aes(prova,nota))+\n  geom_boxplot(color='black', fill='lightpink')+\n  ylim(0,100)+\n  labs(title= \"Frequência das notas\")+\n  facet_wrap(~prova,scales = \"free_x\")\n\nWarning: Continuous x aesthetic\nℹ did you forget `aes(group = ...)`?\n\n\n\n\n\n\n\nGráficos ggplot para cada subconjunto, foi carregado os pacotes ggthemes e patchwork. Com a função geom_vline, foi adicionado uma linha vertical na posição media1 e media2 de cor vermelha e estilo tracejado para cada gráfico. Os gráficos foram unidos com a função p1+p2 do pacote patchwork.\n\nlibrary(ggthemes)\nlibrary(patchwork)\n\nWarning: package 'patchwork' was built under R version 4.3.3\n\np1 &lt;- sabatina_1 |&gt;\n  ggplot (aes(x=nota))+\n  geom_histogram(bins= 5, fill = \"violet\", color = \"gray\")+\n  facet_wrap(~prova)+\n  theme_few()+\n  labs( y= \"Frequência\",\n       x= \"Nota\")+\n    geom_vline(xintercept = media1, color =\"red\", linetype =\"dashed\")\n  \np1\n\n\n\n  p2 &lt;- sabatina_2 |&gt;\n  ggplot (aes(x=nota))+\n  geom_histogram(bins= 5, fill = \"violet\", color = \"gray\")+\n  facet_wrap(~prova)+\n  theme_few()+\n  labs( y= \"Frequência\",\n       x= \"Nota\")+\n    geom_vline(xintercept = media2, color =\"red\", linetype =\"dashed\")\n  \np2\n\n\n\n(p1+p2) + plot_layout(guides = \"collect\",\n          axes= \"collect\")+\n          plot_annotation(title= \"Frequência das Notas Sabatinas 1 e 2 da disciplina FIP              606\",\n          caption= \"Source: Emerson Del Ponte (2024)\")\n\n\n\nggsave(\"patch_sabatinas.png\", width= 5, height = 4) \n#salvando os gráficos\n\nA média dos alunos na sabatina 1 foi de 7,955 e na sabatina 2 de 7,926"
  },
  {
    "objectID": "Aula3.html",
    "href": "Aula3.html",
    "title": "Aula 3",
    "section": "",
    "text": "carregamos o pacote tidyverse para a importação dos dados.\n\nlibrary(tidyverse)\n\ncr &lt;- read_csv(\"https://raw.githubusercontent.com/emdelponte/paper-coffee-rust-Ethiopia/master/data/survey_clean.csv\")\n\nglimpse(cr)\n\nRows: 405\nColumns: 13\n$ farm            &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,…\n$ region          &lt;chr&gt; \"SNNPR\", \"SNNPR\", \"SNNPR\", \"SNNPR\", \"SNNPR\", \"SNNPR\", …\n$ zone            &lt;chr&gt; \"Bench Maji\", \"Bench Maji\", \"Bench Maji\", \"Bench Maji\"…\n$ district        &lt;chr&gt; \"Debub Bench\", \"Debub Bench\", \"Debub Bench\", \"Debub Be…\n$ lon             &lt;dbl&gt; 35.44250, 35.44250, 35.42861, 35.42861, 35.42861, 35.3…\n$ lat             &lt;dbl&gt; 6.904722, 6.904722, 6.904444, 6.904444, 6.904444, 6.90…\n$ altitude        &lt;dbl&gt; 1100, 1342, 1434, 1100, 1400, 1342, 1432, 1100, 1400, …\n$ cultivar        &lt;chr&gt; \"Local\", \"Mixture\", \"Mixture\", \"Local\", \"Local\", \"Mixt…\n$ shade           &lt;chr&gt; \"Sun\", \"Mid shade\", \"Mid shade\", \"Sun\", \"Sun\", \"Mid sh…\n$ cropping_system &lt;chr&gt; \"Plantation\", \"Plantation\", \"Plantation\", \"Plantation\"…\n$ farm_management &lt;chr&gt; \"Unmanaged\", \"Minimal\", \"Minimal\", \"Unmanaged\", \"Unman…\n$ inc             &lt;dbl&gt; 86.70805, 51.34354, 43.20000, 76.70805, 47.15808, 51.3…\n$ sev2            &lt;dbl&gt; 55.57986, 17.90349, 8.25120, 46.10154, 12.25167, 19.91…\n\n#ViSualização \n\nlibrary(ggthemes)\n\ncr |&gt;\n  ggplot(aes(x= sev2, fill= region))+\n  geom_histogram()+\n  facet_grid(region ~ cultivar)+\n  scale_fill_manual(values= c(\"red\", \"blue\"))+\n  theme_minimal(base_size= 14)+\n  theme(legend.position =  \"bottom\")+\n  labs(y= \"Frequency\",\n       x= \"Severity (%)\", fill= \"Region\")\n\n\n\n\n\n\nCarregamos o pacote ggthemes e utilizamos a função geom_histogram\n\nlibrary(ggthemes)\n\ncr |&gt;\n  ggplot(aes(x= sev2, fill= region))+\n  geom_histogram()+\n  facet_grid(region ~ cultivar)+\n  scale_fill_manual(values= c(\"red\", \"blue\"))+\n  theme_minimal(base_size= 14)+\n  theme(legend.position =  \"bottom\")+\n  labs(y= \"Frequency\",\n       x= \"Severity (%)\", fill= \"Region\")\n\n\n\n\n\n\n\nUtlizamos a função summary e visualizamos por meio da função geom_point.\n\nsummary(cr$inc)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   9.50   19.43   32.50   34.89   48.20   86.71 \n\ncr |&gt;\n  group_by (region) |&gt;\n  summarize(sev_med = median (sev2),\n            sev_mean = mean (sev2), \n            sev_sd= sd(sev2))\n\n# A tibble: 2 × 4\n  region sev_med sev_mean sev_sd\n  &lt;chr&gt;    &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;\n1 Oromia    6.23     8.06   6.82\n2 SNNPR     4.88     9.81  10.5 \n\ncr |&gt;\n  ggplot(aes(inc, sev2))+\n  geom_point()\n\n\n\n\n\n\n\nUtilizamos as funções select() e filter() do pacote dplyr para selecionar colunas e linhas, respectivamente.\n\nlibrary(dplyr)\n\n\n#cria e filtra Oromia\n\ncr_oromia &lt;- cr |&gt;\n  select(farm, region, cultivar, sev2) |&gt;\n  filter(region == \"Oromia\")\ncr_oromia\n\n# A tibble: 165 × 4\n    farm region cultivar  sev2\n   &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;    &lt;dbl&gt;\n 1   286 Oromia Mixture   7.63\n 2   287 Oromia Mixture   9.39\n 3   288 Oromia Mixture   1.30\n 4   289 Oromia Mixture   9.79\n 5   290 Oromia Local    18.5 \n 6   291 Oromia Mixture  13.2 \n 7   292 Oromia Mixture   5.60\n 8   293 Oromia Mixture   1.06\n 9   294 Oromia Local    17.6 \n10   295 Oromia Mixture  15.4 \n# ℹ 155 more rows\n\n#cria e filtra SNNPR\n\ncr_pr &lt;- cr |&gt;\n  select(farm, region, cultivar, sev2) |&gt;\n  filter(region == \"SNNPR\")\ncr_pr\n\n# A tibble: 240 × 4\n    farm region cultivar  sev2\n   &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;    &lt;dbl&gt;\n 1     1 SNNPR  Local    55.6 \n 2     2 SNNPR  Mixture  17.9 \n 3     3 SNNPR  Mixture   8.25\n 4     4 SNNPR  Local    46.1 \n 5     5 SNNPR  Local    12.3 \n 6     6 SNNPR  Mixture  19.9 \n 7     7 SNNPR  Mixture  11.9 \n 8     8 SNNPR  Local    55.6 \n 9     9 SNNPR  Local    11.6 \n10    10 SNNPR  Mixture  11.4 \n# ℹ 230 more rows\n\n\n\n\n\nUtilizamos a função geom_boxplot para a visualizaçãõ dos subconjuntos\n\np1 &lt;-cr_oromia |&gt;\n  ggplot (aes(cultivar, sev2, \n              fill = cultivar))+\n  geom_boxplot()+\n   theme_few()+\n  scale_fill_few()+\n  labs(y= \"Severity(%)\",\n       x= \"\")+\n  coord_flip()\n\np2 &lt;- cr_pr |&gt;\n  ggplot (aes(cultivar, sev2, \n              fill= cultivar)) +\n  geom_boxplot()+\n  theme_few()+\n  scale_fill_few()+\n  labs( y= \"Severity(%)\",\n       x= \"\")+\n  coord_flip()\n\np1\n\n\n\np2\n\n\n\n\n\n\nCarregamos o pacote patchwork e com a função plot_layout unimos os gráficos dos subconjuntos e com a função plot_annotation inserimos os elementos textuais.\n\nlibrary(patchwork)\n\n(p1 / p2) +\n  plot_layout(guides = \"collect\",\n              axes= \"collect\")+\n  plot_annotation(title= \"Coffea rust in Ethiopia\",\n                  caption= \"Source: Amanda Honório (2022)\",\n    tag_levels = \"A\")\n\n\n\np3 &lt;- cr_oromia |&gt;\n  ggplot(aes(x= sev2))+\n  geom_histogram()\n\np1 + inset_element(p3, left = 0.6, bottom = 0.6, right =1, top= 1)\n\n\n\nggsave(\"patch1.png\", width= 5,\n       height = 4)"
  },
  {
    "objectID": "Aula3.html#sumarizando-os-dados",
    "href": "Aula3.html#sumarizando-os-dados",
    "title": "Aula 3",
    "section": "",
    "text": "Utlizamos a função summary e visualizamos por meio da função geom_point.\n\nsummary(cr$inc)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   9.50   19.43   32.50   34.89   48.20   86.71 \n\ncr |&gt;\n  group_by (region) |&gt;\n  summarize(sev_med = median (sev2),\n            sev_mean = mean (sev2), \n            sev_sd= sd(sev2))\n\n# A tibble: 2 × 4\n  region sev_med sev_mean sev_sd\n  &lt;chr&gt;    &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;\n1 Oromia    6.23     8.06   6.82\n2 SNNPR     4.88     9.81  10.5 \n\ncr |&gt;\n  ggplot(aes(inc, sev2))+\n  geom_point()"
  },
  {
    "objectID": "Aula3.html#criar-subconjuntos",
    "href": "Aula3.html#criar-subconjuntos",
    "title": "Aula 3",
    "section": "",
    "text": "Utilizamos as funções select() e filter() do pacote dplyr para selecionar colunas e linhas, respectivamente.\n\nlibrary(dplyr)\n\n\n#cria e filtra Oromia\n\ncr_oromia &lt;- cr |&gt;\n  select(farm, region, cultivar, sev2) |&gt;\n  filter(region == \"Oromia\")\ncr_oromia\n\n# A tibble: 165 × 4\n    farm region cultivar  sev2\n   &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;    &lt;dbl&gt;\n 1   286 Oromia Mixture   7.63\n 2   287 Oromia Mixture   9.39\n 3   288 Oromia Mixture   1.30\n 4   289 Oromia Mixture   9.79\n 5   290 Oromia Local    18.5 \n 6   291 Oromia Mixture  13.2 \n 7   292 Oromia Mixture   5.60\n 8   293 Oromia Mixture   1.06\n 9   294 Oromia Local    17.6 \n10   295 Oromia Mixture  15.4 \n# ℹ 155 more rows\n\n#cria e filtra SNNPR\n\ncr_pr &lt;- cr |&gt;\n  select(farm, region, cultivar, sev2) |&gt;\n  filter(region == \"SNNPR\")\ncr_pr\n\n# A tibble: 240 × 4\n    farm region cultivar  sev2\n   &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;    &lt;dbl&gt;\n 1     1 SNNPR  Local    55.6 \n 2     2 SNNPR  Mixture  17.9 \n 3     3 SNNPR  Mixture   8.25\n 4     4 SNNPR  Local    46.1 \n 5     5 SNNPR  Local    12.3 \n 6     6 SNNPR  Mixture  19.9 \n 7     7 SNNPR  Mixture  11.9 \n 8     8 SNNPR  Local    55.6 \n 9     9 SNNPR  Local    11.6 \n10    10 SNNPR  Mixture  11.4 \n# ℹ 230 more rows"
  },
  {
    "objectID": "Aula3.html#visualiza-os-subconjuntos",
    "href": "Aula3.html#visualiza-os-subconjuntos",
    "title": "Aula 3",
    "section": "",
    "text": "Utilizamos a função geom_boxplot para a visualizaçãõ dos subconjuntos\n\np1 &lt;-cr_oromia |&gt;\n  ggplot (aes(cultivar, sev2, \n              fill = cultivar))+\n  geom_boxplot()+\n   theme_few()+\n  scale_fill_few()+\n  labs(y= \"Severity(%)\",\n       x= \"\")+\n  coord_flip()\n\np2 &lt;- cr_pr |&gt;\n  ggplot (aes(cultivar, sev2, \n              fill= cultivar)) +\n  geom_boxplot()+\n  theme_few()+\n  scale_fill_few()+\n  labs( y= \"Severity(%)\",\n       x= \"\")+\n  coord_flip()\n\np1\n\n\n\np2\n\n\n\n\n\n\nCarregamos o pacote patchwork e com a função plot_layout unimos os gráficos dos subconjuntos e com a função plot_annotation inserimos os elementos textuais.\n\nlibrary(patchwork)\n\n(p1 / p2) +\n  plot_layout(guides = \"collect\",\n              axes= \"collect\")+\n  plot_annotation(title= \"Coffea rust in Ethiopia\",\n                  caption= \"Source: Amanda Honório (2022)\",\n    tag_levels = \"A\")\n\n\n\np3 &lt;- cr_oromia |&gt;\n  ggplot(aes(x= sev2))+\n  geom_histogram()\n\np1 + inset_element(p3, left = 0.6, bottom = 0.6, right =1, top= 1)\n\n\n\nggsave(\"patch1.png\", width= 5,\n       height = 4)"
  },
  {
    "objectID": "Aula1.html",
    "href": "Aula1.html",
    "title": "Aula 1",
    "section": "",
    "text": "Como criar vetores e atribuir valores.\n\nA &lt;- 1\nB &lt;- 2\nC &lt;- 3\nD &lt;- 4\n\n\n\n\ndf &lt;- data.frame(A,B,C,D)\n\n\n\n\n1+1\n\n[1] 2\n\n1+2\n\n[1] 3\n\n1+3\n\n[1] 4\n\n1+4\n\n[1] 5\n\n4-2\n\n[1] 2\n\n4*2\n\n[1] 8\n\n3*4\n\n[1] 12\n\n2*3\n\n[1] 6\n\n4/2\n\n[1] 2"
  },
  {
    "objectID": "Aula1.html#como-criar-um-dataframe",
    "href": "Aula1.html#como-criar-um-dataframe",
    "title": "Aula 1",
    "section": "",
    "text": "df &lt;- data.frame(A,B,C,D)\n\n\n\n\n1+1\n\n[1] 2\n\n1+2\n\n[1] 3\n\n1+3\n\n[1] 4\n\n1+4\n\n[1] 5\n\n4-2\n\n[1] 2\n\n4*2\n\n[1] 8\n\n3*4\n\n[1] 12\n\n2*3\n\n[1] 6\n\n4/2\n\n[1] 2"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Essa página contém os scripts das aulas que foram ministradas pelo professor Emerson Del Ponte na disciplina Análise e Visualização de Dados em Fitopatologia do programa de pós-graduação em Fitopatologia da Universidade Federal de Viçosa."
  },
  {
    "objectID": "Aula2.html",
    "href": "Aula2.html",
    "title": "Aula 2",
    "section": "",
    "text": "Nessa aula, carregamos os pacotes ec50estimator, readxl, tidyverse e ghseet e usamos as funções read_excel, read_csv e ghseet2tb para importar os dados.\n\nlibrary(ec50estimator)\ndf1 &lt;- multi_isolate\n\nlibrary(readxl)\ndf2 &lt;- read_excel(\"dados-diversos.xlsx\")\ndf21 &lt;- read_excel (\"dados-diversos.xlsx\", \"escala\")\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\ndf3 &lt;- read_csv(\"dados-diversos.csv\")\n\nRows: 60 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): Irrigation\ndbl (3): rep, day, severity\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\nNós importamos nossos dados e carregamos o pacote ggplot2 e com as funções geom_boxplot e geom_jitterconfeccionamos um gráfico. A função ggsave é utilizada para salvar o gráfico no seu computador.\n\nlibrary(gsheet)\n\nWarning: package 'gsheet' was built under R version 4.3.3\n\ndf4 &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=983033137#gid=983033137\")\n\nlibrary(ggplot2)\n\ng1 &lt;- df4 |&gt;\n  ggplot(aes(trat, comp)) + \n  geom_boxplot(outlier.colour = NA, fill = \"purple\") +\n  geom_jitter(width = 0.05, color = \"black\", shape = 2, size = 3) +\n  theme_classic() +\n  labs(\n    x = \"Tratamento\",\n    y = \"Comprimento (mm)\",\n    title = \"Gráfico\",\n    caption = \"Fontes: Dados Diversos\"\n  ) +\n  scale_y_continuous(limits = c(0, 20), n.breaks = 10)\n\nprint(g1)\n\n\n\nggsave(\"plot1.png\", plot = g1, bg = \"white\")\n\nSaving 7 x 5 in image"
  },
  {
    "objectID": "Aula2.html#visualização-de-dados-através-do-gglot2",
    "href": "Aula2.html#visualização-de-dados-através-do-gglot2",
    "title": "Aula 2",
    "section": "",
    "text": "Nós importamos nossos dados e carregamos o pacote ggplot2 e com as funções geom_boxplot e geom_jitterconfeccionamos um gráfico. A função ggsave é utilizada para salvar o gráfico no seu computador.\n\nlibrary(gsheet)\n\nWarning: package 'gsheet' was built under R version 4.3.3\n\ndf4 &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=983033137#gid=983033137\")\n\nlibrary(ggplot2)\n\ng1 &lt;- df4 |&gt;\n  ggplot(aes(trat, comp)) + \n  geom_boxplot(outlier.colour = NA, fill = \"purple\") +\n  geom_jitter(width = 0.05, color = \"black\", shape = 2, size = 3) +\n  theme_classic() +\n  labs(\n    x = \"Tratamento\",\n    y = \"Comprimento (mm)\",\n    title = \"Gráfico\",\n    caption = \"Fontes: Dados Diversos\"\n  ) +\n  scale_y_continuous(limits = c(0, 20), n.breaks = 10)\n\nprint(g1)\n\n\n\nggsave(\"plot1.png\", plot = g1, bg = \"white\")\n\nSaving 7 x 5 in image"
  },
  {
    "objectID": "Aula4.html",
    "href": "Aula4.html",
    "title": "Aula 4",
    "section": "",
    "text": "##Importar dados por meio do DataPasta\nImportamos os dados por meio do pacote datapasta\nlibrary(datapasta)\n\nWarning: package 'datapasta' was built under R version 4.3.3\n\ndat &lt;- tibble::tribble(\n      ~trat, ~rep, ~comp,\n      \"Mg2\",   1L,     9,\n      \"Mg2\",   2L,  12.5,\n      \"Mg2\",   3L,    10,\n      \"Mg2\",   4L,     8,\n      \"Mg2\",   5L,  13.2,\n      \"Mg2\",   6L,    11,\n      \"Mg2\",   7L,  10.8,\n      \"Mg2\",   8L,   9.5,\n      \"Mg2\",   9L,  10.8,\n      \"Mg2\",  10L,  10.4,\n  \"control\",   1L, 13.72,\n  \"control\",   2L, 15.91,\n  \"control\",   3L,  15.7,\n  \"control\",   4L,  14.2,\n  \"control\",   5L,  15.9,\n  \"control\",   6L, 16.54,\n  \"control\",   7L,    18,\n  \"control\",   8L,  14.4,\n  \"control\",   9L, 16.41,\n  \"control\",  10L,    16\n  )"
  },
  {
    "objectID": "Aula4.html#importando-dados-da-internet",
    "href": "Aula4.html#importando-dados-da-internet",
    "title": "Aula 4",
    "section": "Importando dados da internet",
    "text": "Importando dados da internet\n\ntibble::tribble(\n  \n  ~`codigo`, ~ país, ~ `n2`,\n    1L,     \"Brazil\",        4303L,\n    2L,     \"Mozambique\",      43L,\n    3L,       \"Portugal\",      33L,\n    4L,  \"United States\",      23L,\n    5L,         \"Angola\",      19L,\n    6L,          \"Spain\",      16L,\n    7L,      \"(not set)\",      12L,\n    8L,       \"Colombia\",       8L,\n    9L,        \"Germany\",       5L,\n   10L,        \"Hungary\",       5L,\n   11L, \"United Kingdom\",       5L,\n   12L,    \"Netherlands\",       4L,\n   13L,        \"Ecuador\",       3L,\n   14L,         \"France\",       3L,\n   15L,          \"Chile\",       2L,\n   16L,       \"Paraguay\",       2L,\n   17L,           \"Peru\",       2L,\n   18L,      \"Argentina\",       1L,\n   19L,        \"Austria\",       1L,\n   20L,        \"Bolivia\",       1L,\n   21L,     \"Cape Verde\",       1L,\n   22L,          \"China\",       1L,\n   23L,          \"Egypt\",       1L,\n   24L,        \"Finland\",       1L,\n   25L,          \"India\",       1L,\n   26L,          \"Italy\",       1L,\n   27L,       \"Malaysia\",       1L,\n   28L,       \"Pakistan\",       1L,\n   29L,         \"Poland\",       1L,\n   30L,      \"Singapore\",       1L,\n   31L,    \"Timor-Leste\",       1L,\n   32L,        \"Uruguay\",       1L\n  )\n\n# A tibble: 32 × 3\n   codigo país             n2\n    &lt;int&gt; &lt;chr&gt;         &lt;int&gt;\n 1      1 Brazil         4303\n 2      2 Mozambique       43\n 3      3 Portugal         33\n 4      4 United States    23\n 5      5 Angola           19\n 6      6 Spain            16\n 7      7 (not set)        12\n 8      8 Colombia          8\n 9      9 Germany           5\n10     10 Hungary           5\n# ℹ 22 more rows"
  },
  {
    "objectID": "Aula4.html#importando-os-dados",
    "href": "Aula4.html#importando-os-dados",
    "title": "Aula 4",
    "section": "Importando os dados",
    "text": "Importando os dados\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\npepper &lt;- \n  tribble(\n   ~t,  ~`1`,  ~`2`,  ~`3`,\n   0,  0.08, 0.001, 0.001,\n   7,  0.13,  0.01, 0.001,\n  14,  0.78,  0.09,  0.01,\n  21,  0.92,  0.25,  0.05,\n  28,  0.99,   0.8,  0.18,\n  35, 0.995,  0.98,  0.34,\n  42, 0.999,  0.99,  0.48,\n  49, 0.999, 0.999,  0.74\n  )\n\n##Transformação de Dados\nConvertermos o formato da planilha com a função pivot_longer e criamos um gráfico utilizando as funções geom_point geom_line\n\npepper |&gt;\n  pivot_longer(2:4,\n                names_to = \"epidemic\",\n                values_to = \"inc\") |&gt;\n\n ggplot(aes(t, inc, color = epidemic))+\n   geom_point()+\n   geom_line()+\n annotate(geom = \"text\",\n          x = 12,\n          y= 0.75,\n          label= \"1\")+\n   annotate(geom = \"text\",\n          x = 25,\n          y= 0.75,\n          label= \"2\")+\n    annotate(geom = \"text\",\n          x = 40,\n          y= 0.50,\n          label= \"3\")"
  },
  {
    "objectID": "Aula4.html#tabela-de-contingência",
    "href": "Aula4.html#tabela-de-contingência",
    "title": "Aula 4",
    "section": "Tabela de contingência",
    "text": "Tabela de contingência\nConta o número de ocorrências para cada combinação de farm_management e cultivar, resultando em um dataframe com essas combinações e suas contagens. Criamos um gráfico, configurando cultivar no eixo x, n no eixo y, farm_management para colorir as barras e n como rótulo das barras. O código facet_wrap(~cultivar, scales = “free_x”) foi utilizado para criar subgráficos separados para cada cultivar, permitindo que cada um tenha seu próprio eixo x ajustado automaticamente.\n\nlibrary(ggthemes)\n\ncr &lt;- read_csv (\"https://raw.githubusercontent.com/emdelponte/paper-coffee-rust-Ethiopia/master/data/survey_clean.csv\")\n\nRows: 405 Columns: 13\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (7): region, zone, district, cultivar, shade, cropping_system, farm_mana...\ndbl (6): farm, lon, lat, altitude, inc, sev2\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ncr |&gt;\n  count(farm_management,cultivar) |&gt;\n  ggplot(aes(cultivar,n, fill= farm_management,\n             label = n))+\n  geom_col(position = \"dodge2\", width = 1)+\n  scale_fill_brewer()+\n  theme_bw()+\n  theme(strip.text.x= element_blank(),\n        legend.position = \"top\")+\n  geom_text(position = position_dodge (width = 0.9))+\n  facet_wrap(~cultivar, scales = \"free_x\")\n\n\n\n\nUtilizamos a biblioteca janitor para tabular dados de um dataframe chamado cr, mostrando a frequência das combinações entre cultivar e farm_management.\n\nlibrary(janitor)\n\nWarning: package 'janitor' was built under R version 4.3.3\n\n\n\nAttaching package: 'janitor'\n\n\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n\ncr |&gt;\n  tabyl(cultivar,farm_management)\n\n cultivar Intensive Minimal Moderate Unmanaged\n Improved        83       0        0         0\n    Local         0      10        4       102\n  Mixture        82      59       65         0"
  },
  {
    "objectID": "Aula4.html#geom_errorbar",
    "href": "Aula4.html#geom_errorbar",
    "title": "Aula 4",
    "section": "Geom_errorbar",
    "text": "Geom_errorbar\nImportamos dados do Google Drive, calculamos a média e o desvio padrão da variável (comp) agrupada por trat, e criamos um gráfico com pontos e barras de erro utilizando ggplot2.\n\nlibrary(gsheet)\n\nWarning: package 'gsheet' was built under R version 4.3.3\n\nmg &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=983033137\")\n                 \nmg |&gt;\n  group_by(trat)|&gt;\n  summarise(mean_comp = mean (comp),\n                sd_comp = sd (comp)) |&gt;\n  ggplot(aes(trat, mean_comp))+ \n  #geom_col(fill= \"steelblue\", width = 0.5)+\n  geom_point(size = 3)+\n  ylim(5,20)+\n  geom_errorbar(aes(ymin = mean_comp - sd_comp,\n                    ymax = mean_comp + sd_comp),\n                    width = 0.02)+\n  annotate(geom= \"text\",\n           x= 1, y = 17.5,\n           label = \"*\"\n           )\n\n\n\n\nCriamos um gráfico de dispersão com jitter usando ggplot2 para visualizar a variável comp em relação a trat no dataframe mg. A função geom_jitter é utilizada para adicionar um desvio aleatório aos pontos no eixo x, facilitando a visualização dos dados quando há sobreposição de pontos.\n\nmg |&gt;\n  ggplot(aes(trat,comp))+\n  geom_jitter(width = 0.1)"
  },
  {
    "objectID": "Aula6.html",
    "href": "Aula6.html",
    "title": "Aula 6",
    "section": "",
    "text": "Carregamos o pacote gsheet para a importação dos dados do Google Drive\n\nlibrary(gsheet)\n\nWarning: package 'gsheet' was built under R version 4.3.3\n\nmg &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=983033137\")\n\n\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nmg |&gt;\n  ggplot(aes(trat,comp))+\n  geom_boxplot()"
  },
  {
    "objectID": "Aula6.html#visualização-dos-dados",
    "href": "Aula6.html#visualização-dos-dados",
    "title": "Aula 6",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nmg |&gt;\n  ggplot(aes(trat,comp))+\n  geom_boxplot()"
  },
  {
    "objectID": "Aula8.html",
    "href": "Aula8.html",
    "title": "Importação de dados",
    "section": "",
    "text": "Importação de dados\nUtilizamos o pacote gsheet, para importar uma planilha no Google Drive através da função gsheet2tbl.Após a importação, o dataframe severidade é exibido para verificar se os dados foram carregados corretamente.A coluna rep do dataframe severidade é convertida para fator usando o operador |&gt; e a função mutate do pacote dplyr.\n\nlibrary(gsheet)\n\nWarning: package 'gsheet' was built under R version 4.3.3\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nseveridade &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=1807247585\")\nseveridade\n\n# A tibble: 60 × 4\n   Irrigation   rep   day severity\n   &lt;chr&gt;      &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;\n 1 Furrow         1     0     0.01\n 2 Furrow         2     0     0.01\n 3 Furrow         3     0     0.01\n 4 Furrow         1     7     0.04\n 5 Furrow         2     7     0.04\n 6 Furrow         3     7     0.04\n 7 Furrow         1    14     0.1 \n 8 Furrow         2    14     0.1 \n 9 Furrow         3    14     0.11\n10 Furrow         1    21     0.11\n# ℹ 50 more rows\n\nseveridade &lt;- severidade |&gt;\n  mutate(rep = as.factor(rep))\n\nCriamos um gráfico visualização com vários painéis, cada um mostrando a severidade média dos dados (mean_sev) plotada ao longo dos dias (day), segmentada por tipo de irrigação (Irrigation).\n\nlibrary(ggplot2)\n\nseveridade |&gt; \n  group_by(day, Irrigation) |&gt; \n  summarise(mean_sev = mean(severity)) |&gt; \n  ggplot(aes(day, mean_sev)) +\n   geom_point(which = 0.05)+ \n  geom_line()+\n  facet_wrap(~~Irrigation)+\n  labs(x = \"Days\",\n  y = \"Mean of Severity\")\n\n`summarise()` has grouped output by 'day'. You can override using the `.groups`\nargument.\n\n\nWarning in geom_point(which = 0.05): Ignoring unknown parameters: `which`\n\n\n\n\n\n\n\nCálculo da Área abaixo da curva de progresso da doença\nCarregamos o pacote epifitter e agricolae. Os dados foram agrupados por Irrigation (tipo de irrigação) e rep (repetição). Para cada grupo, a função AUDPC foi utilizada para calcular o AACPD, utilizando as colunas day e severity. O resultado é armazenado em uma nova coluna chamada aacpd no data frame curve2. Um modelo linear m_curve foi ajustado para prever o aacpd (severidade da doença) com base em Irrigation (tipo de irrigação) e rep (repetição) como variáveis independentes. O modelo foi ajustado utilizando o data frame curve2.A função anova foi aplicada ao modelo m_curve para realizar a ANOVA. A ANOVA testou se as variáveis independentes (Irrigation e rep) têm um efeito estatisticamente significativo na variável dependente (aacpd). A função cv.model do pacote agricolae foi aplicada ao modelo m_curve para calcular o CV. O CV mede a variabilidade do aacpd em relação à sua média.\n\nlibrary(epifitter)\n\nWarning: package 'epifitter' was built under R version 4.3.3\n\ncurve2 &lt;- severidade|&gt; \ngroup_by(Irrigation, rep) |&gt; \n  summarise(aacpd = AUDPC(day,severity))\n\n`summarise()` has grouped output by 'Irrigation'. You can override using the\n`.groups` argument.\n\nm_curve &lt;- lm(aacpd ~ Irrigation + factor(rep), data = curve2)\nanova(m_curve)\n\nAnalysis of Variance Table\n\nResponse: aacpd\n            Df  Sum Sq  Mean Sq F value  Pr(&gt;F)  \nIrrigation   1 0.23602 0.236017  10.605 0.08275 .\nfactor(rep)  2 0.61291 0.306454  13.771 0.06770 .\nResiduals    2 0.04451 0.022254                  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nlibrary(agricolae)\ncv.model(m_curve)\n\n[1] 1.097572"
  }
]