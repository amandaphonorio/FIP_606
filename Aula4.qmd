---
title: "Aula 4"
format: html
editor: visual
---

##Importar dados por meio do DataPasta

Importamos os dados por meio do pacote `datapasta`

```{r}
library(datapasta)

dat <- tibble::tribble(
      ~trat, ~rep, ~comp,
      "Mg2",   1L,     9,
      "Mg2",   2L,  12.5,
      "Mg2",   3L,    10,
      "Mg2",   4L,     8,
      "Mg2",   5L,  13.2,
      "Mg2",   6L,    11,
      "Mg2",   7L,  10.8,
      "Mg2",   8L,   9.5,
      "Mg2",   9L,  10.8,
      "Mg2",  10L,  10.4,
  "control",   1L, 13.72,
  "control",   2L, 15.91,
  "control",   3L,  15.7,
  "control",   4L,  14.2,
  "control",   5L,  15.9,
  "control",   6L, 16.54,
  "control",   7L,    18,
  "control",   8L,  14.4,
  "control",   9L, 16.41,
  "control",  10L,    16
  )

```

## Importando dados da internet

```{r}
tibble::tribble(
  
  ~`codigo`, ~ país, ~ `n2`,
    1L,     "Brazil",        4303L,
    2L,     "Mozambique",      43L,
    3L,       "Portugal",      33L,
    4L,  "United States",      23L,
    5L,         "Angola",      19L,
    6L,          "Spain",      16L,
    7L,      "(not set)",      12L,
    8L,       "Colombia",       8L,
    9L,        "Germany",       5L,
   10L,        "Hungary",       5L,
   11L, "United Kingdom",       5L,
   12L,    "Netherlands",       4L,
   13L,        "Ecuador",       3L,
   14L,         "France",       3L,
   15L,          "Chile",       2L,
   16L,       "Paraguay",       2L,
   17L,           "Peru",       2L,
   18L,      "Argentina",       1L,
   19L,        "Austria",       1L,
   20L,        "Bolivia",       1L,
   21L,     "Cape Verde",       1L,
   22L,          "China",       1L,
   23L,          "Egypt",       1L,
   24L,        "Finland",       1L,
   25L,          "India",       1L,
   26L,          "Italy",       1L,
   27L,       "Malaysia",       1L,
   28L,       "Pakistan",       1L,
   29L,         "Poland",       1L,
   30L,      "Singapore",       1L,
   31L,    "Timor-Leste",       1L,
   32L,        "Uruguay",       1L
  )


```

## Importando os dados

```{r}
library(tidyverse)
pepper <- 
  tribble(
   ~t,  ~`1`,  ~`2`,  ~`3`,
   0,  0.08, 0.001, 0.001,
   7,  0.13,  0.01, 0.001,
  14,  0.78,  0.09,  0.01,
  21,  0.92,  0.25,  0.05,
  28,  0.99,   0.8,  0.18,
  35, 0.995,  0.98,  0.34,
  42, 0.999,  0.99,  0.48,
  49, 0.999, 0.999,  0.74
  )
```

##Transformação de Dados

Convertermos o formato da planilha com a função `pivot_longer` e criamos um gráfico utilizando as funções `geom_point` `geom_line`

```{r}
pepper |>
  pivot_longer(2:4,
                names_to = "epidemic",
                values_to = "inc") |>

 ggplot(aes(t, inc, color = epidemic))+
   geom_point()+
   geom_line()+
 annotate(geom = "text",
          x = 12,
          y= 0.75,
          label= "1")+
   annotate(geom = "text",
          x = 25,
          y= 0.75,
          label= "2")+
    annotate(geom = "text",
          x = 40,
          y= 0.50,
          label= "3")
```

## Tabela de contingência

Conta o número de ocorrências para cada combinação de farm_management e cultivar, resultando em um dataframe com essas combinações e suas contagens. Criamos um gráfico, configurando cultivar no eixo x, n no eixo y, farm_management para colorir as barras e n como rótulo das barras. O código facet_wrap(\~cultivar, scales = "free_x") foi utilizado para criar subgráficos separados para cada cultivar, permitindo que cada um tenha seu próprio eixo x ajustado automaticamente.

```{r}

library(ggthemes)

cr <- read_csv ("https://raw.githubusercontent.com/emdelponte/paper-coffee-rust-Ethiopia/master/data/survey_clean.csv")

cr |>
  count(farm_management,cultivar) |>
  ggplot(aes(cultivar,n, fill= farm_management,
             label = n))+
  geom_col(position = "dodge2", width = 1)+
  scale_fill_brewer()+
  theme_bw()+
  theme(strip.text.x= element_blank(),
        legend.position = "top")+
  geom_text(position = position_dodge (width = 0.9))+
  facet_wrap(~cultivar, scales = "free_x")
```

Utilizamos a biblioteca `janitor` para tabular dados de um dataframe chamado cr, mostrando a frequência das combinações entre cultivar e farm_management.

```{r}
library(janitor)

cr |>
  tabyl(cultivar,farm_management)
```

## Geom_errorbar

Importamos dados do  Google Drive, calculamos a média e o desvio padrão da variável (comp) agrupada por trat, e criamos um gráfico com pontos e barras de erro utilizando `ggplot2`.

```{r}
library(gsheet)

mg <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=983033137")
                 
mg |>
  group_by(trat)|>
  summarise(mean_comp = mean (comp),
                sd_comp = sd (comp)) |>
  ggplot(aes(trat, mean_comp))+ 
  #geom_col(fill= "steelblue", width = 0.5)+
  geom_point(size = 3)+
  ylim(5,20)+
  geom_errorbar(aes(ymin = mean_comp - sd_comp,
                    ymax = mean_comp + sd_comp),
                    width = 0.02)+
  annotate(geom= "text",
           x= 1, y = 17.5,
           label = "*"
           )
```
Criamos um gráfico de dispersão com jitter usando `ggplot2` para visualizar a variável comp em relação a trat no dataframe mg. A função geom_jitter é utilizada para adicionar um desvio aleatório aos pontos no eixo x, facilitando a visualização dos dados quando há sobreposição de pontos.
```{r}

mg |>
  ggplot(aes(trat,comp))+
  geom_jitter(width = 0.1)
```
